/*
 * Statuspage API
 *
 * # Code of Conduct Please don't abuse the API, and please report all feature requests and issues to https://help.statuspage.io/help/contact-us-30  # Rate Limiting Each API token is limited to 1 request / second as measured on a 60 second rolling window. To get this limit increased, please contact us at https://help.statuspage.io/help/contact-us-30  # Basics  ## HTTPS It's required  ## URL Prefix In order to maintain version integrity into the future, the API is versioned. All calls currently begin with the following prefix:    https://api.statuspage.io/v1/  ## RESTful Interface Wherever possible, the API seeks to implement repeatable patterns with logical, representative URLs and descriptive HTTP verbs. Below are some examples and conventions you will see throughout the documentation.  * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json * GET will retrieve information about a collection/element * POST will create an element in a collection * PATCH will update a single element * PUT will replace a single element in a collection (rarely used) * DELETE will destroy a single element  ## Sending Data Information can be sent in the body as form urlencoded or JSON, but make sure the Content-Type header matches the body structure or the server gremlins will be angry.  All examples are provided in JSON format, however they can easily be converted to form encoding if required.  Some examples of how to convert things are below:      // JSON     {       \"incident\": {         \"name\": \"test incident\",         \"components\": [\"8kbf7d35c070\", \"vtnh60py4yd7\"]       }     }      // Form Encoded (using curl as an example):     curl -X POST https://api.statuspage.io/v1/example \\       -d \"incident[name]=test incident\" \\       -d \"incident[components][]=8kbf7d35c070\" \\       -d \"incident[components][]=vtnh60py4yd7\"  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
import (
	"time"
)

// Get an incident subscriber
type Subscriber struct {
	// Subscriber Identifier
	Id string `json:"id,omitempty"`
	// If this is true, do not notify the user with changes to their subscription.
	SkipConfirmationNotification bool `json:"skip_confirmation_notification,omitempty"`
	// The communication mode of the subscriber.
	Mode string `json:"mode,omitempty"`
	// The email address to use to contact the subscriber. Used for Email and Webhook subscribers.
	Email string `json:"email,omitempty"`
	// The URL where a webhook subscriber elects to receive updates.
	Endpoint string `json:"endpoint,omitempty"`
	// The phone number used to contact an SMS subscriber
	PhoneNumber string `json:"phone_number,omitempty"`
	// The two-character country code representing the country of which the phone_number is a part.
	PhoneCountry string `json:"phone_country,omitempty"`
	// A formatted version of the phone_number and phone_country pair, nicely formatted for display.
	DisplayPhoneNumber string `json:"display_phone_number,omitempty"`
	// Obfuscated slack channel name
	ObfuscatedChannelName string `json:"obfuscated_channel_name,omitempty"`
	// The workspace name of the slack subscriber.
	WorkspaceName string `json:"workspace_name,omitempty"`
	// The timestamp when the subscriber was quarantined due to an issue reaching them.
	QuarantinedAt time.Time `json:"quarantined_at,omitempty"`
	// The timestamp when a quarantined subscriber will be purged (unsubscribed).
	PurgeAt time.Time `json:"purge_at,omitempty"`
	// The components for which the subscriber has elected to receive updates.
	Components string `json:"components,omitempty"`
	// The Page Access user this subscriber belongs to (only for audience-specific pages).
	PageAccessUserId string `json:"page_access_user_id,omitempty"`
	CreatedAt time.Time `json:"created_at,omitempty"`
}
