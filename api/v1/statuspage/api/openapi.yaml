openapi: 3.0.0
info:
  title: Statuspage API
  description: |-
    # Code of Conduct
    Please don't abuse the API, and please report all feature requests and issues to
    https://help.statuspage.io/help/contact-us-30

    # Rate Limiting
    Each API token is limited to 1 request / second as measured on a 60 second rolling window.
    To get this limit increased, please contact us at https://help.statuspage.io/help/contact-us-30

    # Basics

    ## HTTPS
    It's required

    ## URL Prefix
    In order to maintain version integrity into the future, the API is versioned. All calls
    currently begin with the following prefix:

      https://api.statuspage.io/v1/

    ## RESTful Interface
    Wherever possible, the API seeks to implement repeatable patterns with logical,
    representative URLs and descriptive HTTP verbs. Below are some examples and conventions
    you will see throughout the documentation.

    * Collections are buckets: https://api.statuspage.io/v1/pages/asdf123/incidents.json
    * Elements have unique IDs: https://api.statuspage.io/v1/pages/asdf123/incidents/jklm456.json
    * GET will retrieve information about a collection/element
    * POST will create an element in a collection
    * PATCH will update a single element
    * PUT will replace a single element in a collection (rarely used)
    * DELETE will destroy a single element

    ## Sending Data
    Information can be sent in the body as form urlencoded or JSON, but make sure the
    Content-Type header matches the body structure or the server gremlins will be angry.

    All examples are provided in JSON format, however they can easily be converted to form encoding
    if required.  Some examples of how to convert things are below:

        // JSON
        {
          "incident": {
            "name": "test incident",
            "components": ["8kbf7d35c070", "vtnh60py4yd7"]
          }
        }

        // Form Encoded (using curl as an example):
        curl -X POST https://api.statuspage.io/v1/example \
          -d "incident[name]=test incident" \
          -d "incident[components][]=8kbf7d35c070" \
          -d "incident[components][]=vtnh60py4yd7"

    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->
  contact:
    name: Statuspage Support
    url: https://help.statuspage.io/help/contact-us-30
  version: 1.0.0
  x-logo:
    url: https://d1ykxpo828xni0.cloudfront.net/Statuspage-logo-padding.svg
servers:
- url: https://api.statuspage.io/v1
security:
- api_key: []
tags:
- name: status embed config
  description: |
    Operations about status embed configs.
  x-displayName: Status Embed Config
- name: pages
  description: |
    Your page profile drives basic settings for your status page including your company name,
    notification preferences, and time zone.
  x-displayName: Pages
- name: page access users
  description: |
    Page access users allow you to limit people who can see your status page via a login. It
    also allows you to limit the components and metrics each status page visitor can see,
    customizing the status page for their needs.

    You will need Statuspage to switch your page type to audience-specific before these API
    endpoints have any effect on your status page.
  x-displayName: Page Access Users
- name: page access user components
  x-displayName: Page Access User Components
- name: page access user metrics
  x-displayName: Page Access User Metrics
- name: page access groups
  description: |
    Page access groups allow you to create a grouping of components, metrics and people who
    can see your status page via a login, customizing the status page for their needs.

    You will need Statuspage to switch your page type to audience-specific before these API
    endpoints have any effect on your status page.
  x-displayName: Page Access Groups
- name: page access group components
  x-displayName: Page Access Group Components
- name: subscribers
  description: |
    Subscribers are those that receive notifications via email, sms, Slack, or webhook to incidents
    that are reported and subsequently updated.

    Subscribers can be subscribed to:
    *  a status page, where they get all updates to every incident automatically,
    *  one or more components of a status page, where they get all updates to those
       components automatically, or
    *  a specific incident, where they will only receive notifications for updates to that
       incident after they subscribed (not applicable for Slack subscribers).

    If a (page or component) subscriber fails to receive a notification, they will be
    [quarantined](https://help.statuspage.io/knowledge_base/topics/quarantined-subscribers).
    Quarantined subscribers are excluded from API responses and interactions by default.
  x-displayName: Subscribers
- name: templates
  description: |
    Templates allow you to set a pre-filled name and message that can be used later to save time when creating an incident or scheduling a maintenance.
  x-displayName: Templates
- name: incidents
  description: |
    Incidents are critical events that have occurred with your product or service that you
    want to communicate to your users. They come in three flavors: historical, realtime, and
    scheduled.

    **Historical**: historical incidents are submitted to accuractely reflect past incidents
    from your infrastructure that occurred before you created your Statuspage account.

    **Realtime**: realtime incidents are created when something unexpected is affecting your
    infrastructure. Notifications are sent out to your subscribers informing them of the
    incident, and it is displayed prominently at the top of your status page. This is the
    most common incident type.

    **Scheduled**: scheduled incidents are planned outages or maintenance periods coming
    up in the future. Notifications are sent out to your subscribers informing them of the
    planned incident, and additional options are available to remind subscribers 60 minutes
    before the incident start and to automatically transition the incident to In Progress
    at the start of the incident maintenance period.
  x-displayName: Incidents
- name: incident updates
  x-displayName: Incident Updates
- name: incident subscribers
  x-displayName: Incident Subscribers
- name: incident postmortem
  description: |
    Postmortems are a great way to post information about an incident after it has passed.
    They generally contain detailed information about the events that caused the incident,
    mitigation steps to stop it from happening, and followup work that has and will occur
    to ensure similar incidents do not occur in the future. After Postmortems are authored
    they can be sent to customers via email notifications or Twitter, and will show on the
    incident details page.
  x-displayName: Incident Postmortem
- name: components
  description: |
    Components are the individual pieces of infrastructure that are listed on your status
    page.  This endpoint is used primarily to update status on individual components in the
    event of an outage or for degraded performance.
  x-displayName: Components
- name: component groups
  description: |
    Component groups provide a way to organize components. This endpoint can be used to
    list, create, update or delete component groups. When a group is deleted, its child
    components will be orphaned. Note: A group cannot be empty, so if all the child
    components are deleted, the group will be deleted automatically. Another implication of
    this is that components must be created before their groups, when a group is created it
    will require a list of component IDs.
  x-displayName: Component Groups
- name: metrics
  description: |
    System metrics are a great way to build trust and transparency around your organization,
    and ensure that your page is doing work for you each and every day. Submitting data for
    a custom metric is as easy as sending a POST request with the timestamp and value of the
    data point.

    Take note that there are a couple constraints and considerations when submitting data:

    * At minimum, one data point must be submitted every **5 minutes**. If there is a lag in
      data, the gap will be reflected on the charts for the "Day" view.

    * Each data point is cast to its nearest **30s interval**, giving us a maximum of 10 data
      points per 5 minute period. Submitting multiple data points near each other will result
      in the last data point being the only one stored.

    * The timestamp value returned in the body of the response will be the **casted timestamp**
      used to store your data.

    * Data can, and should, be backfilled up to **28 days** in the past.
  x-displayName: Metrics
- name: metric providers
  x-displayName: Metric Providers
- name: users
  description: |
    Users are owned by an organization, and have access to all pages and elements owned by
    the pages under a given organization.
    <br /><br />
    **Important note**
    <br />
    User management endpoints are not available for organizations using Atlassian accounts. These endpoints will be deprecated and will no longer work when all Statuspage accounts are migrated to Atlassian accounts.
  x-displayName: Users
paths:
  /pages:
    get:
      tags:
      - pages
      summary: Get a list of pages
      description: Get a list of pages
      operationId: getPages
      responses:
        200:
          description: Get a list of pages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Page'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}:
    get:
      tags:
      - pages
      summary: Get a page
      description: Get a page
      operationId: getPagesPageId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - pages
      summary: Update a page
      description: Update a page
      operationId: putPagesPageId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPages'
        required: true
      responses:
        200:
          description: Update a page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page[name]=string" \
            -d "page[domain]=string" \
            -d "page[url]=string"
    patch:
      tags:
      - pages
      summary: Update a page
      description: Update a page
      operationId: patchPagesPageId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPages'
        required: true
      responses:
        200:
          description: Update a page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page[name]=string" \
            -d "page[domain]=string" \
            -d "page[url]=string"
  /pages/{page_id}/page_access_users:
    get:
      tags:
      - page access users
      summary: Get a list of page access users
      description: Get a list of page access users
      operationId: getPagesPageIdPageAccessUsers
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: email
        in: query
        description: Email address to search for
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        200:
          description: Get a list of page access users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - page access users
      summary: Add a page access user
      description: Add a page access user
      operationId: postPagesPageIdPageAccessUsers
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessUsers'
        required: true
      responses:
        200:
          description: Add a page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        409:
          description: The request could not be processed due to a conflict in resource state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "page_access_user[external_login]=string" \
            -d "page_access_user[email]=string" \
            -d "page_access_user[page_access_group_ids][]=your-id"
  /pages/{page_id}/page_access_users/{page_access_user_id}:
    get:
      tags:
      - page access users
      summary: Get page access user
      description: Get page access user
      operationId: getPagesPageIdPageAccessUsersPageAccessUserId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - page access users
      summary: Update page access user
      description: Update page access user
      operationId: putPagesPageIdPageAccessUsersPageAccessUserId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Update page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page_access_user[external_login]=string" \
            -d "page_access_user[email]=string" \
            -d "page_access_user[page_access_group_ids][]=your-id"
    delete:
      tags:
      - page access users
      summary: Delete page access user
      description: Delete page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        204:
          description: Delete page access user
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - page access users
      summary: Update page access user
      description: Update page access user
      operationId: patchPagesPageIdPageAccessUsersPageAccessUserId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Update page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page_access_user[external_login]=string" \
            -d "page_access_user[email]=string" \
            -d "page_access_user[page_access_group_ids][]=your-id"
  /pages/{page_id}/page_access_users/{page_access_user_id}/components:
    get:
      tags:
      - page access user components
      summary: Get components for page access user
      description: Get components for page access user
      operationId: getPagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get components for page access user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - page access user components
      summary: Add components for page access user
      description: Add components for page access user
      operationId: putPagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/patchPagesPageIdPageAccessUsersPageAccessUserIdComponents'
      responses:
        200:
          description: Add components for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
    post:
      tags:
      - page access user components
      summary: Replace components for page access user
      description: Replace components for page access user
      operationId: postPagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/patchPagesPageIdPageAccessUsersPageAccessUserIdComponents'
      responses:
        201:
          description: Replace components for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "component_ids[]=your-id"
    delete:
      tags:
      - page access user components
      summary: Remove components for page access user
      description: Remove components for page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        200:
          description: Remove components for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE \
            -d "component_ids[]=your-id"
    patch:
      tags:
      - page access user components
      summary: Add components for page access user
      description: Add components for page access user
      operationId: patchPagesPageIdPageAccessUsersPageAccessUserIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/patchPagesPageIdPageAccessUsersPageAccessUserIdComponents'
      responses:
        200:
          description: Add components for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
  /pages/{page_id}/page_access_users/{page_access_user_id}/components/{component_id}:
    delete:
      tags:
      - page access user components
      summary: Remove component for page access user
      description: Remove component for page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserIdComponentsComponentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Remove component for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/page_access_users/{page_access_user_id}/metrics:
    get:
      tags:
      - page access user metrics
      summary: Get metrics for page access user
      description: Get metrics for page access user
      operationId: getPagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get metrics for page access user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Metric'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - page access user metrics
      summary: Add metrics for page access user
      description: Add metrics for page access user
      operationId: putPagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdPageAccessUsersPageAccessUserIdMetrics'
        required: true
      responses:
        200:
          description: Add metrics for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metric_ids[]=your-id"
    post:
      tags:
      - page access user metrics
      summary: Replace metrics for page access user
      description: Replace metrics for page access user
      operationId: postPagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessUsersPageAccessUserIdMetrics'
        required: true
      responses:
        201:
          description: Replace metrics for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "metric_ids[]=your-id"
    delete:
      tags:
      - page access user metrics
      summary: Delete metrics for page access user
      description: Delete metrics for page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deletePagesPageIdPageAccessUsersPageAccessUserIdMetrics'
        required: true
      responses:
        200:
          description: Delete metrics for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - page access user metrics
      summary: Add metrics for page access user
      description: Add metrics for page access user
      operationId: patchPagesPageIdPageAccessUsersPageAccessUserIdMetrics
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdPageAccessUsersPageAccessUserIdMetrics'
        required: true
      responses:
        200:
          description: Add metrics for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metric_ids[]=your-id"
  /pages/{page_id}/page_access_users/{page_access_user_id}/metrics/{metric_id}:
    delete:
      tags:
      - page access user metrics
      summary: Delete metric for page access user
      description: Delete metric for page access user
      operationId: deletePagesPageIdPageAccessUsersPageAccessUserIdMetricsMetricId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_user_id
        in: path
        description: Page Access User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metric_id
        in: path
        description: Identifier of metric requested
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Delete metric for page access user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessUser'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_users/{page_access_user_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/page_access_groups:
    get:
      tags:
      - page access groups
      summary: Get a list of page access groups
      description: Get a list of page access groups
      operationId: getPagesPageIdPageAccessGroups
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a list of page access groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - page access groups
      summary: Create a page access group
      description: Create a page access group
      operationId: postPagesPageIdPageAccessGroups
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessGroups'
        required: true
      responses:
        201:
          description: Create a page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "page_access_group[name]=string" \
            -d "page_access_group[component_ids][]=your-id" \
            -d "page_access_group[metric_ids][]=your-id"
  /pages/{page_id}/page_access_groups/{page_access_group_id}:
    get:
      tags:
      - page access groups
      summary: Get a page access group
      description: Get a page access group
      operationId: getPagesPageIdPageAccessGroupsPageAccessGroupId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups/{page_access_group_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - page access groups
      summary: Update a page access group
      description: Update a page access group
      operationId: putPagesPageIdPageAccessGroupsPageAccessGroupId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdPageAccessGroups'
        required: true
      responses:
        200:
          description: Update a page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups/{page_access_group_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page_access_group[name]=string" \
            -d "page_access_group[component_ids][]=your-id" \
            -d "page_access_group[metric_ids][]=your-id"
    delete:
      tags:
      - page access groups
      summary: Remove a page access group
      description: Remove a page access group
      operationId: deletePagesPageIdPageAccessGroupsPageAccessGroupId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Remove a page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups/{page_access_group_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - page access groups
      summary: Update a page access group
      description: Update a page access group
      operationId: patchPagesPageIdPageAccessGroupsPageAccessGroupId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdPageAccessGroups'
        required: true
      responses:
        200:
          description: Update a page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups/{page_access_group_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "page_access_group[name]=string" \
            -d "page_access_group[component_ids][]=your-id" \
            -d "page_access_group[metric_ids][]=your-id"
  /pages/{page_id}/page_access_groups/{page_access_group_id}/components:
    get:
      tags:
      - page access group components
      summary: List components for a page access group
      description: List components for a page access group
      operationId: getPagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List components for a page access group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - page access group components
      summary: Add components to page access group
      description: Add components to page access group
      operationId: putPagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdPageAccessGroupsPageAccessGroupIdComponents'
        required: true
      responses:
        200:
          description: Add components to page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
    post:
      tags:
      - page access group components
      summary: Replace components for a page access group
      description: Replace components for a page access group
      operationId: postPagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdPageAccessGroupsPageAccessGroupIdComponents'
        required: true
      responses:
        201:
          description: Replace components for a page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "component_ids[]=your-id"
    delete:
      tags:
      - page access group components
      summary: Delete components for a page access group
      description: Delete components for a page access group
      operationId: deletePagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deletePagesPageIdPageAccessGroupsPageAccessGroupIdComponents'
        required: true
      responses:
        200:
          description: Delete components for a page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - page access group components
      summary: Add components to page access group
      description: Add components to page access group
      operationId: patchPagesPageIdPageAccessGroupsPageAccessGroupIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdPageAccessGroupsPageAccessGroupIdComponents'
        required: true
      responses:
        200:
          description: Add components to page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
  /pages/{page_id}/page_access_groups/{page_access_group_id}/components/{component_id}:
    delete:
      tags:
      - page access group components
      summary: Remove a component from a page access group
      description: Remove a component from a page access group
      operationId: deletePagesPageIdPageAccessGroupsPageAccessGroupIdComponentsComponentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page_access_group_id
        in: path
        description: Page Access Group Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Remove a component from a page access group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAccessGroup'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/page_access_groups{page_access_group_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/subscribers/resend_confirmation:
    post:
      tags:
      - subscribers
      summary: Resend confirmations to a list of subscribers
      description: Resend confirmations to a list of subscribers
      operationId: postPagesPageIdSubscribersResendConfirmation
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdSubscribersResendConfirmation'
        required: true
      responses:
        201:
          description: Resend confirmations to a list of subscribers
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/resend_confirmation \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "subscribers[]=your-id"
  /pages/{page_id}/subscribers/unsubscribe:
    post:
      tags:
      - subscribers
      summary: Unsubscribe a list of subscribers
      description: Unsubscribe a list of subscribers
      operationId: postPagesPageIdSubscribersUnsubscribe
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdSubscribersUnsubscribe'
        required: true
      responses:
        201:
          description: Unsubscribe a list of subscribers
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/unsubscribe \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "subscribers[]=your-id"
  /pages/{page_id}/subscribers/reactivate:
    post:
      tags:
      - subscribers
      summary: Reactivate a list of subscribers
      description: Reactivate a list of quarantined subscribers
      operationId: postPagesPageIdSubscribersReactivate
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdSubscribersReactivate'
        required: true
      responses:
        201:
          description: Reactivate a list of quarantined subscribers
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/reactivate \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "subscribers[]=your-id"
  /pages/{page_id}/subscribers/histogram_by_state:
    get:
      tags:
      - subscribers
      summary: Get a histogram of subscribers by type and then state
      description: Get a histogram of subscribers by type and then state
      operationId: getPagesPageIdSubscribersHistogramByState
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a histogram of subscribers by type and then state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberCountByTypeAndState'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/histogram_by_state \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/subscribers/count:
    get:
      tags:
      - subscribers
      summary: Get a count of subscribers by type
      description: Get a count of subscribers by type
      operationId: getPagesPageIdSubscribersCount
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: If this is present, only count subscribers of this type.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - email
          - sms
          - slack
          - webhook
          - integration_partner
      - name: state
        in: query
        description: If this is present, only count subscribers in this state. Specify state "all" to count subscribers in any states.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - active
          - unconfirmed
          - quarantined
          - all
          default: active
      responses:
        200:
          description: Get a count of subscribers by type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriberCountByType'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/count \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/subscribers/unsubscribed:
    get:
      tags:
      - subscribers
      summary: Get a list of unsubscribed subscribers
      description: Get a list of unsubscribed subscribers
      operationId: getPagesPageIdSubscribersUnsubscribed
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a list of unsubscribed subscribers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/unsubscribed \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/subscribers:
    get:
      tags:
      - subscribers
      summary: Get a list of subscribers
      description: Get a list of subscribers
      operationId: getPagesPageIdSubscribers
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: q
        in: query
        description: If this is specified, search the contact information (email, endpoint, or phone number) for the provided value. This parameter doesn’t support searching for Slack subscribers.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: If specified, only return subscribers of the indicated type.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - email
          - sms
          - webhook
          - slack
          - integration_partner
      - name: state
        in: query
        description: If this is present, only return subscribers in this state. Specify state "all" to find subscribers in any states.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - active
          - unconfirmed
          - quarantined
          - all
          default: active
      - name: limit
        in: query
        description: The maximum number of rows to return. If a text query string is specified (q=), the default and maximum limit is 100. If the text query string is not specified, the default and maximum limit are not set, and not providing a limit will return all the subscribers.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: The page offset of subscribers. The first page is page 0, the second page 1, etc. This skips page * limit subscribers.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
      - name: sort_field
        in: query
        description: 'The field on which to sort: ''primary'' to indicate sorting
          by the identifying field, ''created_at'' for sorting by creation timestamp,
          ''quarantined_at'' for sorting by quarantine timestamp, and ''relevance''
          which sorts by the relevancy of the search text. ''relevance'' is not a
          valid parameter if no search text is supplied.'
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - primary
          - created_at
          - quarantined_at
          - relevance
          default: primary
      - name: sort_direction
        in: query
        description: The sort direction of the listing.
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - asc
          - desc
          default: asc
      responses:
        200:
          description: Get a list of subscribers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - subscribers
      summary: Create a subscriber
      description: Create a subscriber. Not applicable for Slack subscribers.
      operationId: postPagesPageIdSubscribers
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdSubscribers'
        required: true
      responses:
        201:
          description: Create a subscriber. Not applicable for Slack subscribers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "subscriber[email]=string"
  /pages/{page_id}/subscribers/{subscriber_id}/resend_confirmation:
    post:
      tags:
      - subscribers
      summary: Resend confirmation to a subscriber
      description: Resend confirmation to a subscriber
      operationId: postPagesPageIdSubscribersSubscriberIdResendConfirmation
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_id
        in: path
        description: Subscriber Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        201:
          description: Resend confirmation to a subscriber
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/{subscriber_id}/resend_confirmation \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST
  /pages/{page_id}/subscribers/{subscriber_id}:
    get:
      tags:
      - subscribers
      summary: Get a subscriber
      description: Get a subscriber
      operationId: getPagesPageIdSubscribersSubscriberId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_id
        in: path
        description: Subscriber Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a subscriber
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    delete:
      tags:
      - subscribers
      summary: Unsubscribe a subscriber
      description: Unsubscribe a subscriber
      operationId: deletePagesPageIdSubscribersSubscriberId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_id
        in: path
        description: Subscriber Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: skip_unsubscription_notification
        in: query
        description: If skip_unsubscription_notification is true, the subscriber does not receive any notifications when they are unsubscribed.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        200:
          description: Unsubscribe a subscriber
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - subscribers
      summary: Update a subscriber
      description: Update a subscriber
      operationId: patchPagesPageIdSubscribersSubscriberId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_id
        in: path
        description: Subscriber Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdSubscribers'
        required: true
      responses:
        200:
          description: Update a subscriber
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_ids[]=your-id"
  /pages/{page_id}/incident_templates:
    get:
      tags:
      - templates
      summary: Get a list of templates
      description: Get a list of templates
      operationId: getPagesPageIdIncidentTemplates
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Page offset to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Number of results to return per page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        200:
          description: Get a list of templates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncidentTemplate'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incident_templates \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - templates
      summary: Create a template
      description: Create a template
      operationId: postPagesPageIdIncidentTemplates
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdIncidentTemplates'
        required: true
      responses:
        201:
          description: Create a template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTemplate'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incident_templates \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "template[name]=string" \
            -d "template[title]=string" \
            -d "template[body]=string"
  /pages/{page_id}/incidents:
    get:
      tags:
      - incidents
      summary: Get a list of incidents
      description: Get a list of incidents
      operationId: getPagesPageIdIncidents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: q
        in: query
        description: If this is specified, search for the text query string in the incidents' name, status, postmortem_body, and incident_updates fields.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The maximum number of rows to return per page. The default and maximum limit is 100.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: page
        in: query
        description: Page offset to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: Get a list of incidents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Incident'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - incidents
      summary: Create an incident
      description: Create an incident
      operationId: postPagesPageIdIncidents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdIncidents'
        required: true
      responses:
        201:
          description: Create an incident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "incident[name]=string" \
            -d "incident[status]=string" \
            -d "incident[body]=string"
  /pages/{page_id}/incidents/active_maintenance:
    get:
      tags:
      - incidents
      summary: Get a list of active maintenances
      description: Get a list of active maintenances
      operationId: getPagesPageIdIncidentsActiveMaintenance
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Page offset to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Number of results to return per page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        200:
          description: Get a list of active maintenances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Incident'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/active_maintenance \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/upcoming:
    get:
      tags:
      - incidents
      summary: Get a list of upcoming incidents
      description: Get a list of upcoming incidents
      operationId: getPagesPageIdIncidentsUpcoming
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Page offset to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Number of results to return per page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        200:
          description: Get a list of upcoming incidents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Incident'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/upcoming \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/scheduled:
    get:
      tags:
      - incidents
      summary: Get a list of scheduled incidents
      description: Get a list of scheduled incidents
      operationId: getPagesPageIdIncidentsScheduled
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Page offset to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Number of results to return per page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        200:
          description: Get a list of scheduled incidents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Incident'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/scheduled \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/unresolved:
    get:
      tags:
      - incidents
      summary: Get a list of unresolved incidents
      description: Get a list of unresolved incidents
      operationId: getPagesPageIdIncidentsUnresolved
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Page offset to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: per_page
        in: query
        description: Number of results to return per page.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        200:
          description: Get a list of unresolved incidents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Incident'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/unresolved \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/incidents/{incident_id}:
    get:
      tags:
      - incidents
      summary: Get an incident
      description: Get an incident
      operationId: getPagesPageIdIncidentsIncidentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get an incident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - incidents
      summary: Update an incident
      description: Update an incident
      operationId: putPagesPageIdIncidentsIncidentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdIncidents'
        required: true
      responses:
        200:
          description: Update an incident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "incident[name]=string" \
            -d "incident[status]=string" \
            -d "incident[body]=string"
    delete:
      tags:
      - incidents
      summary: Delete an incident
      description: Delete an incident
      operationId: deletePagesPageIdIncidentsIncidentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Delete an incident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - incidents
      summary: Update an incident
      description: Update an incident
      operationId: patchPagesPageIdIncidentsIncidentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdIncidents'
        required: true
      responses:
        200:
          description: Update an incident
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "incident[name]=string" \
            -d "incident[status]=string" \
            -d "incident[body]=string"
  /pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id}:
    put:
      tags:
      - incident updates
      summary: Update a previous incident update
      description: Update a previous incident update
      operationId: putPagesPageIdIncidentsIncidentIdIncidentUpdatesIncidentUpdateId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_update_id
        in: path
        description: Incident Update Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdIncidentUpdates'
        required: true
      responses:
        200:
          description: Update a previous incident update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentUpdate'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "incident_update[wants_twitter_update]=true" \
            -d "incident_update[body]=string"
    patch:
      tags:
      - incident updates
      summary: Update a previous incident update
      description: Update a previous incident update
      operationId: patchPagesPageIdIncidentsIncidentIdIncidentUpdatesIncidentUpdateId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_update_id
        in: path
        description: Incident Update Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdIncidentsIncidentIdIncidentUpdates'
        required: true
      responses:
        200:
          description: Update a previous incident update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentUpdate'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/incident_updates/{incident_update_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "incident_update[wants_twitter_update]=true" \
            -d "incident_update[body]=string"
  /pages/{page_id}/incidents/{incident_id}/subscribers:
    get:
      tags:
      - incident subscribers
      summary: Get a list of incident subscribers
      description: Get a list of incident subscribers
      operationId: getPagesPageIdIncidentsIncidentIdSubscribers
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a list of incident subscribers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscriber'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - incident subscribers
      summary: Create an incident subscriber
      description: Create an incident subscriber
      operationId: postPagesPageIdIncidentsIncidentIdSubscribers
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdIncidentsIncidentIdSubscribers'
        required: true
      responses:
        201:
          description: Create an incident subscriber
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "email=string"
  /pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}:
    get:
      tags:
      - incident subscribers
      summary: Get an incident subscriber
      description: Get an incident subscriber
      operationId: getPagesPageIdIncidentsIncidentIdSubscribersSubscriberId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_id
        in: path
        description: Subscriber Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get an incident subscriber
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    delete:
      tags:
      - incident subscribers
      summary: Unsubscribe an incident subscriber
      description: Unsubscribe an incident subscriber
      operationId: deletePagesPageIdIncidentsIncidentIdSubscribersSubscriberId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_id
        in: path
        description: Subscriber Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Unsubscribe an incident subscriber
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriber'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}/resend_confirmation:
    post:
      tags:
      - incident subscribers
      summary: Resend confirmation to an incident subscriber
      description: Resend confirmation to an incident subscriber
      operationId: postPagesPageIdIncidentsIncidentIdSubscribersSubscriberIdResendConfirmation
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriber_id
        in: path
        description: Subscriber Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        201:
          description: Resend confirmation to an incident subscriber
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/subscribers/{subscriber_id}/resend_confirmation \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST
  /pages/{page_id}/incidents/{incident_id}/postmortem:
    get:
      tags:
      - incident postmortem
      summary: Get Postmortem
      description: Get Postmortem
      operationId: getPagesPageIdIncidentsIncidentIdPostmortem
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get Postmortem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postmortem'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - incident postmortem
      summary: Create Postmortem
      description: Create Postmortem
      operationId: putPagesPageIdIncidentsIncidentIdPostmortem
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdPostmortem'
        required: true
      responses:
        200:
          description: Create Postmortem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postmortem'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PUT \
            -d "postmortem[body_draft]=string"
    delete:
      tags:
      - incident postmortem
      summary: Delete Postmortem
      description: Delete Postmortem
      operationId: deletePagesPageIdIncidentsIncidentIdPostmortem
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        204:
          description: Delete Postmortem
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/incidents/{incident_id}/postmortem/publish:
    put:
      tags:
      - incident postmortem
      summary: Publish Postmortem
      description: Publish Postmortem
      operationId: putPagesPageIdIncidentsIncidentIdPostmortemPublish
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdPostmortemPublish'
        required: true
      responses:
        200:
          description: Publish Postmortem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postmortem'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem/publish \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PUT \
            -d "postmortem[notify_tweets]=true" \
            -d "postmortem[notify_subscribers]=true"
  /pages/{page_id}/incidents/{incident_id}/postmortem/revert:
    put:
      tags:
      - incident postmortem
      summary: Revert Postmortem
      description: Revert Postmortem
      operationId: putPagesPageIdIncidentsIncidentIdPostmortemRevert
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: incident_id
        in: path
        description: Incident Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Revert Postmortem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postmortem'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/incidents/{incident_id}/postmortem/revert \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PUT
  /pages/{page_id}/components:
    get:
      tags:
      - components
      summary: Get a list of components
      description: Get a list of components
      operationId: getPagesPageIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: Page offset to fetch.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: per_page
        in: query
        description: Number of results to return per page.
        required: false
        style: form
        explode: true
        schema:
          maximum: 1100
          minimum: 1
          type: integer
          format: int32
      responses:
        200:
          description: Get a list of components
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - components
      summary: Create a component
      description: Create a component
      operationId: postPagesPageIdComponents
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdComponents'
        required: true
      responses:
        201:
          description: Create a component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "component[description]=string" \
            -d "component[status]=string" \
            -d "component[name]=string"
  /pages/{page_id}/components/{component_id}:
    get:
      tags:
      - components
      summary: Get a component
      description: Get a component
      operationId: getPagesPageIdComponentsComponentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - components
      summary: Update a component
      description: Update a component
      operationId: putPagesPageIdComponentsComponentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdComponents'
        required: true
      responses:
        200:
          description: Update a component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component[description]=string" \
            -d "component[status]=string" \
            -d "component[name]=string"
    delete:
      tags:
      - components
      summary: Delete a component
      description: Delete a component
      operationId: deletePagesPageIdComponentsComponentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        204:
          description: Delete a component
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - components
      summary: Update a component
      description: Update a component
      operationId: patchPagesPageIdComponentsComponentId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdComponents'
        required: true
      responses:
        200:
          description: Update a component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component[description]=string" \
            -d "component[status]=string" \
            -d "component[name]=string"
  /pages/{page_id}/components/{component_id}/uptime:
    get:
      tags:
      - components
      summary: Get uptime data for a component
      description: Get uptime data for a component that has uptime showcase enabled
      operationId: getPagesPageIdComponentsComponentIdUptime
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: start
        in: query
        description: |
          The start date for uptime calculation (defaults to the component's start_date field or 90 days ago, whichever is more recent).
          The maximum supported date range is six calendar months. If the year is given, the date defaults to the first day of the year.
          If the year and month are given, the start date defaults to the first day of that month.
          The earliest supported date is January 1, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: PartialStartDate
      - name: end
        in: query
        description: |
          The end date for uptime calculation (defaults to today in the page's time zone). The maximum supported date range is six calendar months.
          If the year is given, the date defaults to the last day of the year. If the year and month are given, the date defaults to the last day of that month.
          The earliest supported date is January 1, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: PartialEndDate
      responses:
        200:
          description: Get uptime data for a component that has uptime showcase enabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentUptime'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
  /pages/{page_id}/components/{component_id}/page_access_users:
    post:
      tags:
      - components
      summary: Add page access users to a component
      description: Add page access users to a component
      operationId: postPagesPageIdComponentsComponentIdPageAccessUsers
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        201:
          description: Add page access users to a component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id}/page_access_users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "page_access_user_ids[]=your-id"
    delete:
      tags:
      - components
      summary: Remove page access users from component
      description: Remove page access users from component
      operationId: deletePagesPageIdComponentsComponentIdPageAccessUsers
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Remove page access users from component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id}/page_access_users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/components/{component_id}/page_access_groups:
    post:
      tags:
      - components
      summary: Add page access groups to a component
      description: Add page access groups to a component
      operationId: postPagesPageIdComponentsComponentIdPageAccessGroups
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        201:
          description: Add page access groups to a component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id}/page_access_groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "page_access_group_ids[]=your-id"
    delete:
      tags:
      - components
      summary: Remove page access groups from a component
      description: Remove page access groups from a component
      operationId: deletePagesPageIdComponentsComponentIdPageAccessGroups
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: component_id
        in: path
        description: Component identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Remove page access groups from a component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/components/{component_id}/page_access_groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/component-groups:
    get:
      tags:
      - component groups
      summary: Get a list of component groups
      description: Get a list of component groups
      operationId: getPagesPageIdComponentGroups
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a list of component groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupComponent'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - component groups
      summary: Create a component group
      description: Create a component group
      operationId: postPagesPageIdComponentGroups
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdComponentGroups'
        required: true
      responses:
        201:
          description: Create a component group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "component_group[components][]=your-id" \
            -d "component_group[name]=string"
  /pages/{page_id}/component-groups/{id}:
    get:
      tags:
      - component groups
      summary: Get a component group
      description: Get a component group
      operationId: getPagesPageIdComponentGroupsId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Component group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a component group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups/{id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - component groups
      summary: Update a component group
      description: Update a component group
      operationId: putPagesPageIdComponentGroupsId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Component group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdComponentGroups'
        required: true
      responses:
        200:
          description: Update a component group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups/{id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_group[components][]=your-id" \
            -d "component_group[name]=string"
    delete:
      tags:
      - component groups
      summary: Delete a component group
      description: Delete a component group
      operationId: deletePagesPageIdComponentGroupsId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Component group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Delete a component group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups/{id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - component groups
      summary: Update a component group
      description: Update a component group
      operationId: patchPagesPageIdComponentGroupsId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Component group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdComponentGroups'
        required: true
      responses:
        200:
          description: Update a component group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupComponent'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/component-groups/{id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "component_group[components][]=your-id" \
            -d "component_group[name]=string"
  /pages/{page_id}/component-groups/{id}/uptime:
    get:
      tags:
      - component groups
      summary: Get uptime data for a component group
      description: Get uptime data for a component group that has uptime showcase enabled for at least one component.
      operationId: getPagesPageIdComponentGroupsIdUptime
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: Component group identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: start
        in: query
        description: |
          The start date for uptime calculation (defaults to the date of the component in the group with the earliest start_date, or 90 days ago, whichever is more recent).
          The maximum supported date range is six calendar months. If the year is given, the date defaults to the first day of the year.
          If the year and month are given, the start date defaults to the first day of that month.
          The earliest supported date is January 1, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: PartialStartDate
      - name: end
        in: query
        description: |
          The end date for uptime calculation (defaults to today in the page's time zone). The maximum supported date range is six calendar months.
          If the year is given, the date defaults to the last day of the year. If the year and month are given, the date defaults to the last day of that month.
          The earliest supported date is January 1, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: PartialEndDate
      responses:
        200:
          description: Get uptime data for a component group that has uptime showcase enabled for at least one component.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentGroupUptime'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
  /pages/{page_id}/metrics/data:
    post:
      tags:
      - metrics
      summary: Add data points to metrics
      description: Add data points to metrics
      operationId: postPagesPageIdMetricsData
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdMetricsData'
        required: true
      responses:
        201:
          description: Add data points to metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAddResponse'
              examples:
                response:
                  value:
                    s2jx68p8yn7j:
                    - timestamp: 1607664952
                      value: 123.456
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        405:
          description: Method not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/data \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "data[metric_id][][timestamp]=0" \
            -d "data[metric_id][][value]=0"
  /pages/{page_id}/metrics:
    get:
      tags:
      - metrics
      summary: Get a list of metrics
      description: Get a list of metrics
      operationId: getPagesPageIdMetrics
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a list of metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
  /pages/{page_id}/metrics/{metric_id}:
    get:
      tags:
      - metrics
      summary: Get a metric
      description: Get a metric
      operationId: getPagesPageIdMetricsMetricId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metric_id
        in: path
        description: Metric Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - metrics
      summary: Update a metric
      description: Update a metric
      operationId: putPagesPageIdMetricsMetricId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metric_id
        in: path
        description: Metric Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdMetrics'
        required: true
      responses:
        200:
          description: Update a metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metric[name]=string"
    delete:
      tags:
      - metrics
      summary: Delete a metric
      description: Delete a metric
      operationId: deletePagesPageIdMetricsMetricId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metric_id
        in: path
        description: Metric Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Delete a metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - metrics
      summary: Update a metric
      description: Update a metric
      operationId: patchPagesPageIdMetricsMetricId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metric_id
        in: path
        description: Metric Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdMetrics'
        required: true
      responses:
        200:
          description: Update a metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metric[name]=string"
  /pages/{page_id}/metrics/{metric_id}/data:
    post:
      tags:
      - metrics
      summary: Add data to a metric
      description: Add data to a metric
      operationId: postPagesPageIdMetricsMetricIdData
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metric_id
        in: path
        description: Metric Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdMetricsMetricIdData'
        required: true
      responses:
        201:
          description: Add data to a metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleMetricAddResponse'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        405:
          description: Method not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id}/data \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "data[timestamp]=0" \
            -d "data[value]=0"
    delete:
      tags:
      - metrics
      summary: Reset data for a metric
      description: Reset data for a metric
      operationId: deletePagesPageIdMetricsMetricIdData
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metric_id
        in: path
        description: Metric Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Reset data for a metric
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics/{metric_id}/data \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /pages/{page_id}/metrics_providers:
    get:
      tags:
      - metric providers
      summary: Get a list of metric providers
      description: Get a list of metric providers
      operationId: getPagesPageIdMetricsProviders
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a list of metric providers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MetricsProvider'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - metric providers
      summary: Create a metric provider
      description: Create a metric provider
      operationId: postPagesPageIdMetricsProviders
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdMetricsProviders'
        required: true
      responses:
        201:
          description: Create a metric provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "metrics_provider[email]=string" \
            -d "metrics_provider[api_token]=string" \
            -d "metrics_provider[type]=string"
  /pages/{page_id}/metrics_providers/{metrics_provider_id}:
    get:
      tags:
      - metric providers
      summary: Get a metric provider
      description: Get a metric provider
      operationId: getPagesPageIdMetricsProvidersMetricsProviderId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metrics_provider_id
        in: path
        description: Metric Provider Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a metric provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - metric providers
      summary: Update a metric provider
      description: Update a metric provider
      operationId: putPagesPageIdMetricsProvidersMetricsProviderId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metrics_provider_id
        in: path
        description: Metric Provider Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdMetricsProviders'
        required: true
      responses:
        200:
          description: Update a metric provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metrics_provider[email]=string" \
            -d "metrics_provider[api_token]=string" \
            -d "metrics_provider[type]=string"
    delete:
      tags:
      - metric providers
      summary: Delete a metric provider
      description: Delete a metric provider
      operationId: deletePagesPageIdMetricsProvidersMetricsProviderId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metrics_provider_id
        in: path
        description: Metric Provider Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Delete a metric provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
    patch:
      tags:
      - metric providers
      summary: Update a metric provider
      description: Update a metric provider
      operationId: patchPagesPageIdMetricsProvidersMetricsProviderId
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metrics_provider_id
        in: path
        description: Metric Provider Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdMetricsProviders'
        required: true
      responses:
        200:
          description: Update a metric provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsProvider'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id} \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "metrics_provider[email]=string" \
            -d "metrics_provider[api_token]=string" \
            -d "metrics_provider[type]=string"
  /pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics:
    get:
      tags:
      - metrics
      - metric providers
      summary: List metrics for a metric provider
      description: List metrics for a metric provider
      operationId: getPagesPageIdMetricsProvidersMetricsProviderIdMetrics
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metrics_provider_id
        in: path
        description: Metric Provider Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: List metrics for a metric provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - metrics
      - metric providers
      summary: Create a metric for a metric provider
      description: Create a metric for a metric provider
      operationId: postPagesPageIdMetricsProvidersMetricsProviderIdMetrics
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: metrics_provider_id
        in: path
        description: Metric Provider Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postPagesPageIdMetricsProvidersMetricsProviderIdMetrics'
        required: true
      responses:
        201:
          description: Create a metric for a metric provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/metrics_providers/{metrics_provider_id}/metrics \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "metric[name]=string" \
            -d "metric[transform]=string" \
            -d "metric[suffix]=string"
  /pages/{page_id}/status_embed_config:
    get:
      tags:
      - status embed config
      summary: Get status embed config settings
      description: Get status embed config settings
      operationId: getPagesPageIdStatusEmbedConfig
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get status embed config settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEmbedConfig'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/pages/{page_id}/status_embed_config \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    put:
      tags:
      - status embed config
      summary: Update status embed config settings
      description: Update status embed config settings
      operationId: putPagesPageIdStatusEmbedConfig
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/putPagesPageIdStatusEmbedConfig'
        required: true
      responses:
        200:
          description: Update status embed config settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEmbedConfig'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/status_embed_config \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "status_embed_config[position]=string" \
            -d "status_embed_config[incident_background_color]=string" \
            -d "status_embed_config[maintenance_text_color]=string"
    patch:
      tags:
      - status embed config
      summary: Update status embed config settings
      description: Update status embed config settings
      operationId: patchPagesPageIdStatusEmbedConfig
      parameters:
      - name: page_id
        in: path
        description: Page identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchPagesPageIdStatusEmbedConfig'
        required: true
      responses:
        200:
          description: Update status embed config settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEmbedConfig'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/pages/{page_id}/status_embed_config \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X PATCH \
            -d "status_embed_config[position]=string" \
            -d "status_embed_config[incident_background_color]=string" \
            -d "status_embed_config[maintenance_text_color]=string"
  /organizations/{organization_id}/users/{user_id}:
    delete:
      tags:
      - users
      summary: Delete a user
      description: Delete a user
      operationId: deleteOrganizationsOrganizationIdUsersUserId
      parameters:
      - name: organization_id
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: user_id
        in: path
        description: User Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Delete a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        403:
          description: You are not authorized to access this resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/organizations/{organization_id}/users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X DELETE
  /organizations/{organization_id}/users:
    get:
      tags:
      - users
      summary: Get a list of users
      description: Get a list of users
      operationId: getOrganizationsOrganizationIdUsers
      parameters:
      - name: organization_id
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Get a list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |
          curl https://api.statuspage.io/v1/organizations/{organization_id}/users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X GET
    post:
      tags:
      - users
      summary: Create a user
      description: Create a user
      operationId: postOrganizationsOrganizationIdUsers
      parameters:
      - name: organization_id
        in: path
        description: Organization Identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postOrganizationsOrganizationIdUsers'
        required: true
      responses:
        201:
          description: Create a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Could not authenticate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        404:
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
        422:
          description: Unprocessable entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEntity'
      x-code-samples:
      - lang: Curl
        source: |-
          curl https://api.statuspage.io/v1/organizations/{organization_id}/users \
            -H "Authorization: OAuth your-api-key-goes-here" \
            -X POST \
            -d "user[email]=string"
components:
  schemas:
    Page:
      type: object
      properties:
        id:
          type: string
          description: Page identifier
          example: gc9z31sm8jbj
        created_at:
          type: string
          description: Timestamp the record was created
          format: date-time
        updated_at:
          type: string
          description: Timestamp the record was last updated
          format: date-time
        name:
          type: string
          description: Name of your page to be displayed
          example: My Company Status
        page_description:
          type: string
        headline:
          type: string
        branding:
          type: string
          description: The main template your statuspage will use
        subdomain:
          type: string
          description: Subdomain at which to access your status page
          example: your-subdomain.statuspage.io
        domain:
          type: string
          description: CNAME alias for your status page
          example: status.mycompany.com
        url:
          type: string
          description: Website of your page.  Clicking on your statuspage image will link here.
          example: https://www.mycompany.com
        support_url:
          type: string
        hidden_from_search:
          type: boolean
          description: Should your page hide itself from search engines
        allow_page_subscribers:
          type: boolean
          description: Can your users subscribe to all notifications on the page
        allow_incident_subscribers:
          type: boolean
          description: Can your users subscribe to notifications for a single incident
        allow_email_subscribers:
          type: boolean
          description: Can your users choose to receive notifications via email
        allow_sms_subscribers:
          type: boolean
          description: Can your users choose to receive notifications via SMS
        allow_rss_atom_feeds:
          type: boolean
          description: Can your users choose to access incident feeds via RSS/Atom
        allow_webhook_subscribers:
          type: boolean
          description: Can your users choose to receive notifications via Webhooks
        notifications_from_email:
          type: string
          description: Allows you to customize the email address your page notifications come from
          example: no-reply@status.mycompany.com
        notifications_email_footer:
          type: string
          description: Allows you to customize the footer appearing on your notification emails.  Accepts Markdown for formatting
        activity_score:
          type: number
          format: float
        twitter_username:
          type: string
        viewers_must_be_team_members:
          type: boolean
        ip_restrictions:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        time_zone:
          type: string
          description: Timezone configured for your page
          example: UTC
        css_body_background_color:
          type: string
          description: CSS Color
        css_font_color:
          type: string
          description: CSS Color
        css_light_font_color:
          type: string
          description: CSS Color
        css_greens:
          type: string
          description: CSS Color
        css_yellows:
          type: string
          description: CSS Color
        css_oranges:
          type: string
          description: CSS Color
        css_blues:
          type: string
          description: CSS Color
        css_reds:
          type: string
          description: CSS Color
        css_border_color:
          type: string
          description: CSS Color
        css_graph_color:
          type: string
          description: CSS Color
        css_link_color:
          type: string
          description: CSS Color
        css_no_data:
          type: string
          description: CSS Color
        favicon_logo:
          type: string
        transactional_logo:
          type: string
        hero_cover:
          type: string
        email_logo:
          type: string
        twitter_logo:
          type: string
      description: Get a page
      example:
        country: country
        hero_cover: hero_cover
        css_link_color: css_link_color
        activity_score: 0.8008282
        allow_sms_subscribers: true
        city: city
        branding: branding
        twitter_username: twitter_username
        transactional_logo: transactional_logo
        created_at: 2000-01-23T04:56:07.000+00:00
        ip_restrictions: ip_restrictions
        page_description: page_description
        css_yellows: css_yellows
        css_graph_color: css_graph_color
        css_reds: css_reds
        css_no_data: css_no_data
        support_url: support_url
        favicon_logo: favicon_logo
        updated_at: 2000-01-23T04:56:07.000+00:00
        notifications_email_footer: notifications_email_footer
        allow_incident_subscribers: true
        id: gc9z31sm8jbj
        notifications_from_email: no-reply@status.mycompany.com
        state: state
        headline: headline
        css_blues: css_blues
        css_body_background_color: css_body_background_color
        allow_email_subscribers: true
        css_oranges: css_oranges
        hidden_from_search: true
        time_zone: UTC
        css_light_font_color: css_light_font_color
        url: https://www.mycompany.com
        viewers_must_be_team_members: true
        allow_webhook_subscribers: true
        twitter_logo: twitter_logo
        domain: status.mycompany.com
        name: My Company Status
        css_greens: css_greens
        email_logo: email_logo
        subdomain: your-subdomain.statuspage.io
        css_border_color: css_border_color
        css_font_color: css_font_color
        allow_page_subscribers: true
        allow_rss_atom_feeds: true
    ErrorEntity:
      type: object
      properties:
        message:
          type: string
      description: Get a list of users
    patchPages:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/patchPages_page'
      description: Update a page
    putPages:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/patchPages_page'
      description: Update a page
    postPagesPageIdPageAccessUsers:
      type: object
      properties:
        page_access_user:
          $ref: '#/components/schemas/postPagesPageIdPageAccessUsers_page_access_user'
      description: Add a page access user
    PageAccessUser:
      type: object
      properties:
        id:
          type: string
          description: Page Access User Identifier
          example: q84skbxr4hv3
        page_id:
          type: string
        email:
          type: string
          example: user@example.com
        external_login:
          type: string
          description: IDP login user id. Key is typically "uid".
        page_access_group_id:
          type: string
        page_access_group_ids:
          type: string
          example: '[]'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: Delete metric for page access user
      example:
        page_id: page_id
        external_login: external_login
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        page_access_group_id: page_access_group_id
        id: q84skbxr4hv3
        email: user@example.com
        page_access_group_ids: '[]'
    Component:
      type: object
      properties:
        id:
          type: string
          description: Identifier for component
        page_id:
          type: string
          description: Page identifier
        group_id:
          type: string
          description: Component Group identifier
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        group:
          type: boolean
          description: Is this component a group
        name:
          type: string
          description: Display name for component
        description:
          type: string
          description: More detailed description for component
        position:
          type: integer
          description: Order the component will appear on the page
          format: int32
        status:
          type: string
          description: Status of component
          enum:
          - operational
          - under_maintenance
          - degraded_performance
          - partial_outage
          - major_outage
          - ""
        showcase:
          type: boolean
          description: Should this component be showcased
        only_show_if_degraded:
          type: boolean
          description: Requires a special feature flag to be enabled
        automation_email:
          type: string
          description: Requires a special feature flag to be enabled
        start_date:
          type: string
          description: The date this component started being used
          format: date
      description: Add page access groups to a component
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        page_id: page_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        group_id: group_id
        name: name
        showcase: true
        only_show_if_degraded: true
        automation_email: automation_email
        id: id
        position: 0
        group: true
        status: operational
        start_date: 2000-01-23
    patchPagesPageIdPageAccessUsersPageAccessUserIdMetrics:
      required:
      - metric_ids
      type: object
      properties:
        metric_ids:
          type: array
          description: List of metrics to add
          items:
            type: string
      description: Add metrics for page access user
    putPagesPageIdPageAccessUsersPageAccessUserIdMetrics:
      required:
      - metric_ids
      type: object
      properties:
        metric_ids:
          type: array
          description: List of metrics to add
          items:
            type: string
      description: Add metrics for page access user
    postPagesPageIdPageAccessUsersPageAccessUserIdMetrics:
      required:
      - metric_ids
      type: object
      properties:
        metric_ids:
          type: array
          description: List of metrics to add
          items:
            type: string
      description: Replace metrics for page access user
    deletePagesPageIdPageAccessUsersPageAccessUserIdMetrics:
      type: object
      properties:
        metric_ids:
          type: array
          description: List of metrics to remove
          items:
            type: string
      description: Delete metrics for page access user
    Metric:
      type: object
      properties:
        id:
          type: string
          description: Metric identifier
        metrics_provider_id:
          type: string
          description: Metric Provider identifier
        metric_identifier:
          type: string
          description: Metric Display identifier used to look up the metric data from the provider
        name:
          type: string
          description: Name of metric
        display:
          type: boolean
          description: Should the metric be displayed
        tooltip_description:
          type: string
        backfilled:
          type: boolean
        y_axis_min:
          type: number
          format: float
        y_axis_max:
          type: number
          format: float
        y_axis_hidden:
          type: boolean
          description: Should the values on the y axis be hidden on render
        suffix:
          type: string
          description: Suffix to describe the units on the graph
        decimal_places:
          type: integer
          format: int32
        most_recent_data_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_fetched_at:
          type: string
          format: date-time
        backfill_percentage:
          type: integer
          format: int32
        reference_name:
          type: string
      description: Create a metric for a metric provider
      example:
        reference_name: reference_name
        y_axis_hidden: true
        display: true
        most_recent_data_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        backfilled: true
        y_axis_max: 6.0274563
        suffix: suffix
        metrics_provider_id: metrics_provider_id
        decimal_places: 1
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        y_axis_min: 0.8008282
        tooltip_description: tooltip_description
        backfill_percentage: 5
        metric_identifier: metric_identifier
        last_fetched_at: 2000-01-23T04:56:07.000+00:00
    PageAccessGroup:
      type: object
      properties:
        id:
          type: string
          description: Page Access Group Identifier
          example: gw1mxw77m35s
        page_id:
          type: string
          description: Page Identifier.
        name:
          type: string
          description: Name for this Group.
        page_access_user_ids:
          type: array
          items:
            type: string
            example: tyvg1szxsjyr
        external_identifier:
          type: string
          description: Associates group with external group.
        metric_ids:
          type: array
          items:
            type: string
            example: jf7xfklpvn8h
        component_ids:
          type: array
          items:
            type: string
            example: vv9glqpx95w1
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: Remove a component from a page access group
      example:
        page_id: page_id
        external_identifier: external_identifier
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        metric_ids:
        - jf7xfklpvn8h
        - jf7xfklpvn8h
        created_at: 2000-01-23T04:56:07.000+00:00
        id: gw1mxw77m35s
        component_ids:
        - vv9glqpx95w1
        - vv9glqpx95w1
        page_access_user_ids:
        - tyvg1szxsjyr
        - tyvg1szxsjyr
    postPagesPageIdPageAccessGroups:
      type: object
      properties:
        page_access_group:
          $ref: '#/components/schemas/postPagesPageIdPageAccessGroups_page_access_group'
      description: Create a page access group
    patchPagesPageIdPageAccessGroups:
      type: object
      properties:
        page_access_group:
          $ref: '#/components/schemas/postPagesPageIdPageAccessGroups_page_access_group'
      description: Update a page access group
    putPagesPageIdPageAccessGroups:
      type: object
      properties:
        page_access_group:
          $ref: '#/components/schemas/postPagesPageIdPageAccessGroups_page_access_group'
      description: Update a page access group
    patchPagesPageIdPageAccessGroupsPageAccessGroupIdComponents:
      type: object
      properties:
        component_ids:
          type: array
          description: List of Component identifiers
          items:
            type: string
      description: Add components to page access group
    putPagesPageIdPageAccessGroupsPageAccessGroupIdComponents:
      type: object
      properties:
        component_ids:
          type: array
          description: List of Component identifiers
          items:
            type: string
      description: Add components to page access group
    postPagesPageIdPageAccessGroupsPageAccessGroupIdComponents:
      required:
      - component_ids
      type: object
      properties:
        component_ids:
          type: array
          description: List of components codes to set on the page access group
          items:
            type: string
      description: Replace components for a page access group
    deletePagesPageIdPageAccessGroupsPageAccessGroupIdComponents:
      type: object
      properties:
        component_ids:
          type: array
          items:
            type: string
      description: Delete components for a page access group
    postPagesPageIdSubscribersResendConfirmation:
      required:
      - subscribers
      type: object
      properties:
        subscribers:
          type: string
          description: The array of subscriber codes to resend confirmations for, or "all" to resend confirmations to all subscribers. Only unconfirmed email subscribers will receive this notification.
      description: Resend confirmations to a list of subscribers
    postPagesPageIdSubscribersUnsubscribe:
      required:
      - subscribers
      type: object
      properties:
        subscribers:
          type: string
          description: The array of subscriber codes to unsubscribe (limited to 100), or "all" to unsubscribe all subscribers if the number of subscribers is less than 100.
        type:
          type: string
          description: If this is present, only unsubscribe subscribers of this type.
          enum:
          - email
          - sms
          - slack
          - webhook
          - integration_partner
        state:
          type: string
          description: If this is present, only unsubscribe subscribers in this state. Specify state "all" to unsubscribe subscribers in any states.
          enum:
          - active
          - unconfirmed
          - quarantined
          - all
          default: active
        skip_unsubscription_notification:
          type: boolean
          description: If skip_unsubscription_notification is true, the subscribers do not receive any notifications when they are unsubscribed.
      description: Unsubscribe a list of subscribers
    postPagesPageIdSubscribersReactivate:
      required:
      - subscribers
      type: object
      properties:
        subscribers:
          type: string
          description: The array of quarantined subscriber codes to reactivate, or "all" to reactivate all quarantined subscribers.
        type:
          type: string
          description: If this is present, only reactivate subscribers of this type.
          enum:
          - email
          - sms
          - slack
          - webhook
          - integration_partner
      description: Reactivate a list of quarantined subscribers
    SubscriberCountByTypeAndState:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/SubscriberCountByState'
        sms:
          $ref: '#/components/schemas/SubscriberCountByState'
        webhook:
          $ref: '#/components/schemas/SubscriberCountByState'
        integration_partner:
          $ref: '#/components/schemas/SubscriberCountByState'
        slack:
          $ref: '#/components/schemas/SubscriberCountByState'
      description: Get a histogram of subscribers by type and then state
      example:
        integration_partner:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
        webhook:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
        slack:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
        sms:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
        email:
          unconfirmed: 6
          total: 5
          active: 0
          quarantined: 1
    SubscriberCountByState:
      type: object
      properties:
        active:
          type: integer
          description: The number of active subscribers found by the query.
          format: int32
        unconfirmed:
          type: integer
          description: The number of unconfirmed subscribers found by the query.
          format: int32
        quarantined:
          type: integer
          description: The number of quarantined subscribers found by the query.
          format: int32
        total:
          type: integer
          description: The total number of subscribers found by the query.
          format: int32
      example:
        unconfirmed: 6
        total: 5
        active: 0
        quarantined: 1
    SubscriberCountByType:
      type: object
      properties:
        email:
          type: integer
          description: The number of Email subscribers found by the query.
          format: int32
        sms:
          type: integer
          description: The number of Webhook subscribers found by the query.
          format: int32
        webhook:
          type: integer
          description: The number of SMS subscribers found by the query.
          format: int32
        integration_partner:
          type: integer
          description: The number of integration partners found by the query.
          format: int32
        slack:
          type: integer
          description: The number of Slack subscribers found by the query.
          format: int32
      description: Get a count of subscribers by type
      example:
        integration_partner: 5
        webhook: 1
        slack: 5
        sms: 6
        email: 0
    Subscriber:
      type: object
      properties:
        id:
          type: string
          description: Subscriber Identifier
          example: nslv0flftbkr
        skip_confirmation_notification:
          type: boolean
          description: If this is true, do not notify the user with changes to their subscription.
        mode:
          type: string
          description: The communication mode of the subscriber.
          example: email
        email:
          type: string
          description: The email address to use to contact the subscriber. Used for Email and Webhook subscribers.
          example: foo@example2.com
        endpoint:
          type: string
          description: The URL where a webhook subscriber elects to receive updates.
          example: http://example.com/
        phone_number:
          type: string
          description: The phone number used to contact an SMS subscriber
          example: 202-555-0105
        phone_country:
          type: string
          description: The two-character country code representing the country of which the phone_number is a part.
          example: US
        display_phone_number:
          type: string
          description: A formatted version of the phone_number and phone_country pair, nicely formatted for display.
          example: +1 (202) 555-0105
        obfuscated_channel_name:
          type: string
          description: Obfuscated slack channel name
          example: '#*******an'
        workspace_name:
          type: string
          description: The workspace name of the slack subscriber.
          example: Atlassian
        quarantined_at:
          type: string
          description: The timestamp when the subscriber was quarantined due to an issue reaching them.
          format: date-time
        purge_at:
          type: string
          description: The timestamp when a quarantined subscriber will be purged (unsubscribed).
          format: date-time
        components:
          type: string
          description: The components for which the subscriber has elected to receive updates.
          example: '["r3hqgqlgmkxh"]'
        page_access_user_id:
          type: string
          description: The Page Access user this subscriber belongs to (only for audience-specific pages).
          example: h14sddhbb22k
        created_at:
          type: string
          format: date-time
      description: Get an incident subscriber
      example:
        obfuscated_channel_name: '#*******an'
        components: '["r3hqgqlgmkxh"]'
        display_phone_number: +1 (202) 555-0105
        quarantined_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        skip_confirmation_notification: true
        page_access_user_id: h14sddhbb22k
        mode: email
        endpoint: http://example.com/
        purge_at: 2000-01-23T04:56:07.000+00:00
        phone_country: US
        phone_number: 202-555-0105
        id: nslv0flftbkr
        email: foo@example2.com
        workspace_name: Atlassian
    postPagesPageIdSubscribers:
      type: object
      properties:
        subscriber:
          $ref: '#/components/schemas/postPagesPageIdSubscribers_subscriber'
      description: Create a subscriber. Not applicable for Slack subscribers.
    patchPagesPageIdSubscribers:
      type: object
      properties:
        component_ids:
          type: array
          description: A list of component ids for which the subscriber should recieve updates for. Components must be an array with at least one element if it is passed at all. Each component must belong to the page indicated in the path. To set the subscriber to be subscribed to all components on the page, exclude this parameter.
          items:
            type: string
      description: Update a subscriber
    postPagesPageIdIncidentTemplates:
      type: object
      properties:
        template:
          $ref: '#/components/schemas/postPagesPageIdIncidentTemplates_template'
      description: Create a template
    IncidentTemplate:
      type: object
      properties:
        id:
          type: string
          description: Incident Template Identifier
          example: 5k17z009lxd6
        components:
          type: array
          description: Affected components
          items:
            $ref: '#/components/schemas/Component'
        name:
          type: string
          description: Name of the template, as shown in the list on the "Templates" tab of the "Incidents" page
        title:
          type: string
          description: Title to be applied to the incident or maintenance when selecting this template
        body:
          type: string
          description: Body of the incident or maintenance update to be applied when selecting this template
        group_id:
          type: string
          description: Identifier of Template Group this template belongs to
          example: vvzxxy3bg9bh
        update_status:
          type: string
          description: The status the incident or maintenance should transition to when selecting this template
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
        should_tweet:
          type: boolean
          description: Whether the "tweet update" checkbox should be selected when selecting this template
        should_send_notifications:
          type: boolean
          description: Whether the "deliver notifications" checkbox should be selected when selecting this template
      description: Get a list of templates
      example:
        components:
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          page_id: page_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_id: group_id
          name: name
          showcase: true
          only_show_if_degraded: true
          automation_email: automation_email
          id: id
          position: 0
          group: true
          status: operational
          start_date: 2000-01-23
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          page_id: page_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_id: group_id
          name: name
          showcase: true
          only_show_if_degraded: true
          automation_email: automation_email
          id: id
          position: 0
          group: true
          status: operational
          start_date: 2000-01-23
        update_status: investigating
        group_id: vvzxxy3bg9bh
        name: name
        id: 5k17z009lxd6
        title: title
        body: body
        should_tweet: true
        should_send_notifications: true
    postPagesPageIdIncidents:
      type: object
      properties:
        incident:
          $ref: '#/components/schemas/postPagesPageIdIncidents_incident'
      description: Create an incident
    Incident:
      type: object
      properties:
        id:
          type: string
          description: Incident Identifier
          example: pgwm2qmd8b2m
        components:
          type: array
          description: Incident components
          items:
            $ref: '#/components/schemas/Component'
        created_at:
          type: string
          description: The timestamp when the incident was created at.
          format: date-time
        impact:
          type: string
          description: The impact of the incident.
          example: critical
        impact_override:
          type: string
          description: value to override calculated impact value
          example: minor
        incident_updates:
          type: array
          description: The incident updates for incident.
          items:
            $ref: '#/components/schemas/IncidentUpdate'
        metadata:
          type: Object
          description: Metadata attached to the incident. Top level values must be objects.
          example:
            jira:
              issue_id: value
        monitoring_at:
          type: string
          description: The timestamp when incident entered monitoring state.
          format: date-time
        name:
          type: string
          description: Incident Name
          example: Data Layer Migration
        page_id:
          type: string
          description: Incident Page Identifier
        postmortem_body:
          type: string
          description: Body of the Postmortem.
          example: |
            ##### Issue
            At approximately 17:02 UTC on 2013-04-21, our master database server unexpectedly went unresponsive to all network.
            A reboot of the machine at 17:05 UTC resulted in a failed mount of a corrupted EBS volume, and we made the decision
            at that time to fail over the slave database.

            ##### Resolution
            At 17:12 UTC, the slave database had been successfully promoted to master and the application recovered enough to
            accept web traffic again. A new slave database node was created and placed into the rotation to guard against future
            master failures. The promoted slave database performed slowly for the next couple of hours as the query cache began
            to warm up, and eventually settled into a reasonable performance profile around 20:00 UTC.

            ##### Future Mitigation Plans
            Over the past few months, we have been working on an overhaul to our data storage layer with a migration from a Postgres
            setup to a distributed, fault-tolerant, multi-region data layer using Riak. This initiative has been prioritized, and
            the migration will be performed in the coming weeks. We will notify our clients of the scheduled downtime via an
            incident on this status site, and via a blog post.
        postmortem_body_last_updated_at:
          type: string
          description: The timestamp when the incident postmortem body was last updated at.
          format: date-time
        postmortem_ignored:
          type: boolean
          description: Controls whether the incident will have postmortem.
        postmortem_notified_subscribers:
          type: boolean
          description: Indicates whether subscribers are already notificed about postmortem.
        postmortem_notified_twitter:
          type: boolean
          description: Controls whether to decide if notify postmortem on twitter.
        postmortem_published_at:
          type: boolean
          description: The timestamp when the postmortem was published.
        resolved_at:
          type: string
          description: The timestamp when incident was resolved.
          format: date-time
        scheduled_auto_completed:
          type: boolean
          description: Controls whether the incident is scheduled to automatically change to complete.
        scheduled_auto_in_progress:
          type: boolean
          description: Controls whether the incident is scheduled to automatically change to in progress.
        scheduled_for:
          type: string
          description: The timestamp the incident is scheduled for.
          format: date-time
        scheduled_remind_prior:
          type: boolean
          description: Controls whether to remind subscribers prior to scheduled incidents.
        scheduled_reminded_at:
          type: string
          description: The timestamp when the scheduled incident reminder was sent at.
          format: date-time
        scheduled_until:
          type: string
          description: The timestamp the incident is scheduled until.
          format: date-time
        shortlink:
          type: string
          description: Incident Shortlink.
          example: http://stspg.io/803310a12
        status:
          type: string
          description: The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.
          example: scheduled
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
        updated_at:
          type: string
          description: The timestamp when the incident was updated at.
          format: date-time
      description: Get an incident
      example:
        scheduled_auto_in_progress: true
        monitoring_at: 2000-01-23T04:56:07.000+00:00
        components:
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          page_id: page_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_id: group_id
          name: name
          showcase: true
          only_show_if_degraded: true
          automation_email: automation_email
          id: id
          position: 0
          group: true
          status: operational
          start_date: 2000-01-23
        - created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          page_id: page_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          group_id: group_id
          name: name
          showcase: true
          only_show_if_degraded: true
          automation_email: automation_email
          id: id
          position: 0
          group: true
          status: operational
          start_date: 2000-01-23
        metadata:
          jira:
            issue_id: value
        created_at: 2000-01-23T04:56:07.000+00:00
        scheduled_for: 2000-01-23T04:56:07.000+00:00
        postmortem_published_at: true
        page_id: page_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        id: pgwm2qmd8b2m
        scheduled_auto_completed: true
        shortlink: http://stspg.io/803310a12
        impact_override: minor
        scheduled_remind_prior: true
        impact: critical
        postmortem_body: |
          ##### Issue
          At approximately 17:02 UTC on 2013-04-21, our master database server unexpectedly went unresponsive to all network.
          A reboot of the machine at 17:05 UTC resulted in a failed mount of a corrupted EBS volume, and we made the decision
          at that time to fail over the slave database.

          ##### Resolution
          At 17:12 UTC, the slave database had been successfully promoted to master and the application recovered enough to
          accept web traffic again. A new slave database node was created and placed into the rotation to guard against future
          master failures. The promoted slave database performed slowly for the next couple of hours as the query cache began
          to warm up, and eventually settled into a reasonable performance profile around 20:00 UTC.

          ##### Future Mitigation Plans
          Over the past few months, we have been working on an overhaul to our data storage layer with a migration from a Postgres
          setup to a distributed, fault-tolerant, multi-region data layer using Riak. This initiative has been prioritized, and
          the migration will be performed in the coming weeks. We will notify our clients of the scheduled downtime via an
          incident on this status site, and via a blog post.
        postmortem_body_last_updated_at: 2000-01-23T04:56:07.000+00:00
        postmortem_notified_twitter: true
        postmortem_notified_subscribers: true
        resolved_at: 2000-01-23T04:56:07.000+00:00
        postmortem_ignored: true
        name: Data Layer Migration
        incident_updates:
        - tweet_id: tweet_id
          created_at: 2000-01-23T04:56:07.000+00:00
          body: body
          affected_components:
          - code: string
            name: string
            old_status: operational
            new_status: operational
          - code: string
            name: string
            old_status: operational
            new_status: operational
          deliver_notifications: true
          display_at: 2000-01-23T04:56:07.000+00:00
          incident_id: incident_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          wants_twitter_update: true
          custom_tweet: custom_tweet
          id: id
          twitter_updated_at: 2000-01-23T04:56:07.000+00:00
          status: investigating
        - tweet_id: tweet_id
          created_at: 2000-01-23T04:56:07.000+00:00
          body: body
          affected_components:
          - code: string
            name: string
            old_status: operational
            new_status: operational
          - code: string
            name: string
            old_status: operational
            new_status: operational
          deliver_notifications: true
          display_at: 2000-01-23T04:56:07.000+00:00
          incident_id: incident_id
          updated_at: 2000-01-23T04:56:07.000+00:00
          wants_twitter_update: true
          custom_tweet: custom_tweet
          id: id
          twitter_updated_at: 2000-01-23T04:56:07.000+00:00
          status: investigating
        scheduled_until: 2000-01-23T04:56:07.000+00:00
        scheduled_reminded_at: 2000-01-23T04:56:07.000+00:00
        status: scheduled
    IncidentUpdate:
      type: object
      properties:
        id:
          type: string
          description: Incident Update Identifier.
        incident_id:
          type: string
          description: Incident Identifier.
        affected_components:
          type: array
          description: Affected components associated with the incident update.
          items:
            type: object
            example:
              code: string
              name: string
              old_status: operational
              new_status: operational
        body:
          type: string
          description: Incident update body.
        created_at:
          type: string
          description: The timestamp when the incident update was created at.
          format: date-time
        custom_tweet:
          type: string
          description: An optional customized tweet message for incident postmortem.
        deliver_notifications:
          type: boolean
          description: Controls whether to delivery notifications.
        display_at:
          type: string
          description: Timestamp when incident update is happened.
          format: date-time
        status:
          type: string
          description: The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
        tweet_id:
          type: string
          description: Tweet identifier associated to this incident update.
        twitter_updated_at:
          type: string
          description: The timestamp when twitter updated at.
          format: date-time
        updated_at:
          type: string
          description: The timestamp when the incident update is updated.
          format: date-time
        wants_twitter_update:
          type: boolean
          description: Controls whether to create twitter update.
      description: Update a previous incident update
      example:
        tweet_id: tweet_id
        created_at: 2000-01-23T04:56:07.000+00:00
        body: body
        affected_components:
        - code: string
          name: string
          old_status: operational
          new_status: operational
        - code: string
          name: string
          old_status: operational
          new_status: operational
        deliver_notifications: true
        display_at: 2000-01-23T04:56:07.000+00:00
        incident_id: incident_id
        updated_at: 2000-01-23T04:56:07.000+00:00
        wants_twitter_update: true
        custom_tweet: custom_tweet
        id: id
        twitter_updated_at: 2000-01-23T04:56:07.000+00:00
        status: investigating
    patchPagesPageIdIncidents:
      type: object
      properties:
        incident:
          $ref: '#/components/schemas/patchPagesPageIdIncidents_incident'
      description: Update an incident
    putPagesPageIdIncidents:
      type: object
      properties:
        incident:
          $ref: '#/components/schemas/patchPagesPageIdIncidents_incident'
      description: Update an incident
    patchPagesPageIdIncidentsIncidentIdIncidentUpdates:
      type: object
      properties:
        incident_update:
          $ref: '#/components/schemas/patchPagesPageIdIncidentsIncidentIdIncidentUpdates_incident_update'
      description: Update a previous incident update
    putPagesPageIdIncidentsIncidentIdIncidentUpdates:
      type: object
      properties:
        incident_update:
          $ref: '#/components/schemas/patchPagesPageIdIncidentsIncidentIdIncidentUpdates_incident_update'
      description: Update a previous incident update
    postPagesPageIdIncidentsIncidentIdSubscribers:
      type: object
      properties:
        subscriber:
          $ref: '#/components/schemas/postPagesPageIdIncidentsIncidentIdSubscribers_subscriber'
      description: Create an incident subscriber
    Postmortem:
      type: object
      properties:
        preview_key:
          type: string
          description: Preview Key
        body:
          type: string
          description: Postmortem body
        body_updated_at:
          type: string
          format: date-time
        body_draft:
          type: string
          description: Body draft
        body_draft_updated_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
        notify_subscribers:
          type: boolean
          description: Should email subscribers be notified.
        notify_twitter:
          type: boolean
          description: Should Twitter followers be notified.
        custom_tweet:
          type: string
          description: Custom tweet for Incident Postmortem
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: Revert Postmortem
      example:
        notify_subscribers: true
        body_updated_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        preview_key: preview_key
        body_draft_updated_at: 2000-01-23T04:56:07.000+00:00
        body_draft: body_draft
        notify_twitter: true
        created_at: 2000-01-23T04:56:07.000+00:00
        custom_tweet: custom_tweet
        body: body
        published_at: 2000-01-23T04:56:07.000+00:00
    putPagesPageIdIncidentsIncidentIdPostmortem:
      type: object
      properties:
        postmortem:
          $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdPostmortem_postmortem'
      description: Create Postmortem
    putPagesPageIdIncidentsIncidentIdPostmortemPublish:
      type: object
      properties:
        postmortem:
          $ref: '#/components/schemas/putPagesPageIdIncidentsIncidentIdPostmortemPublish_postmortem'
      description: Publish Postmortem
    postPagesPageIdComponents:
      type: object
      properties:
        component:
          $ref: '#/components/schemas/postPagesPageIdComponents_component'
      description: Create a component
    patchPagesPageIdComponents:
      type: object
      properties:
        component:
          $ref: '#/components/schemas/postPagesPageIdComponents_component'
      description: Update a component
    putPagesPageIdComponents:
      type: object
      properties:
        component:
          $ref: '#/components/schemas/postPagesPageIdComponents_component'
      description: Update a component
    ComponentUptime:
      type: object
      properties:
        range_start:
          type: string
          description: Start date used for uptime calculation (see the warnings field in the response if this value does not match the start parameter you provided).
          format: date-time
        range_end:
          type: string
          description: End date used for uptime calculation (see the warnings field in the response if this value does not match the end parameter you provided).
          format: date-time
        uptime_percentage:
          type: number
          description: Uptime percentage for a component
          format: float
          example: 96.67
        major_outage:
          type: integer
          description: Seconds of major outage
          format: int32
          example: 86400
        partial_outage:
          type: integer
          description: Seconds of partial outage
          format: int32
          example: 0
        warnings:
          type: string
          description: Warning messages related to the uptime query that may occur
          example: '["End date was adjusted to today. See range_end field in response
            for end date used."]'
        id:
          type: string
          description: Component identifier
        name:
          type: string
          description: Component display name
        related_events:
          $ref: '#/components/schemas/ComponentUptime_related_events'
      description: Get uptime data for a component that has uptime showcase enabled
      example:
        range_end: 2000-01-23T04:56:07.000+00:00
        major_outage: 86400
        uptime_percentage: 96.67
        warnings: '["End date was adjusted to today. See range_end field in response
          for end date used."]'
        range_start: 2000-01-23T04:56:07.000+00:00
        partial_outage: 0
        name: name
        id: id
        related_events:
          id: id
    postPagesPageIdComponentGroups:
      type: object
      properties:
        description:
          type: string
          description: Description of the component group.
        component_group:
          $ref: '#/components/schemas/postPagesPageIdComponentGroups_component_group'
      description: Create a component group
    GroupComponent:
      type: object
      properties:
        id:
          type: string
          description: Component Group Identifier
          example: vrsym7gr0rj6
        page_id:
          type: string
        name:
          type: string
          example: API Components
        description:
          type: string
        components:
          type: array
          example: '["abc123","abc124"]'
          items:
            type: string
        position:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: Get a component group
      example:
        page_id: page_id
        components: '["abc123","abc124"]'
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: API Components
        description: description
        created_at: 2000-01-23T04:56:07.000+00:00
        id: vrsym7gr0rj6
        position: position
    patchPagesPageIdComponentGroups:
      type: object
      properties:
        description:
          type: string
          description: Updated description of the component group.
        component_group:
          $ref: '#/components/schemas/postPagesPageIdComponentGroups_component_group'
      description: Update a component group
    putPagesPageIdComponentGroups:
      type: object
      properties:
        description:
          type: string
          description: Updated description of the component group.
        component_group:
          $ref: '#/components/schemas/postPagesPageIdComponentGroups_component_group'
      description: Update a component group
    ComponentGroupUptime:
      type: object
      properties:
        range_start:
          type: string
          description: Start date used for uptime calculation (see the warnings field in the response if this value does not match the start parameter you provided).
          format: date-time
        range_end:
          type: string
          description: End date used for uptime calculation (see the warnings field in the response if this value does not match the end parameter you provided).
          format: date-time
        uptime_percentage:
          type: number
          description: Uptime percentage for a component
          format: float
          example: 96.67
        major_outage:
          type: integer
          description: Seconds of major outage
          format: int32
          example: 86400
        partial_outage:
          type: integer
          description: Seconds of partial outage
          format: int32
          example: 0
        warnings:
          type: string
          description: Warning messages related to the uptime query that may occur
          example: '["End date was adjusted to today. See range_end field in response
            for end date used."]'
        id:
          type: string
          description: Component group identifier
        name:
          type: string
          description: Component group display name
        related_events:
          $ref: '#/components/schemas/ComponentGroupUptime_related_events'
      description: Get uptime data for a component group that has uptime showcase enabled for at least one component.
      example:
        range_end: 2000-01-23T04:56:07.000+00:00
        major_outage: 86400
        uptime_percentage: 96.67
        warnings: '["End date was adjusted to today. See range_end field in response
          for end date used."]'
        range_start: 2000-01-23T04:56:07.000+00:00
        partial_outage: 0
        name: name
        id: id
        related_events:
          component_id: component_id
          incidents:
            id: id
    MetricAddResponse:
      type: object
      properties:
        metric_id:
          type: array
          description: Metric identifier to add data to
          items:
            $ref: '#/components/schemas/MetricAddResponse_metric_id'
      description: Add data points to metrics
      example:
        metric_id:
        - value: 6.0274563
          timestamp: 0
        - value: 6.0274563
          timestamp: 0
    postPagesPageIdMetricsData:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MetricAddResponse'
      description: Add data points to metrics
    patchPagesPageIdMetrics:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/patchPagesPageIdMetrics_metric'
      description: Update a metric
    putPagesPageIdMetrics:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/patchPagesPageIdMetrics_metric'
      description: Update a metric
    postPagesPageIdMetricsMetricIdData:
      required:
      - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/postPagesPageIdMetricsMetricIdData_data'
      description: Add data to a metric
    SingleMetricAddResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MetricAddResponse_metric_id'
      description: Add data to a metric
      example:
        data:
          value: 6.0274563
          timestamp: 0
    MetricsProvider:
      type: object
      properties:
        id:
          type: string
          description: Identifier for Metrics Provider
        type:
          type: string
        disabled:
          type: boolean
        metric_base_uri:
          type: string
        last_revalidated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        page_id:
          type: integer
          format: int32
      description: Delete a metric provider
      example:
        page_id: 0
        metric_base_uri: metric_base_uri
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        disabled: true
        last_revalidated_at: 2000-01-23T04:56:07.000+00:00
        id: id
        type: type
    postPagesPageIdMetricsProviders:
      type: object
      properties:
        metrics_provider:
          $ref: '#/components/schemas/postPagesPageIdMetricsProviders_metrics_provider'
      description: Create a metric provider
    patchPagesPageIdMetricsProviders:
      type: object
      properties:
        metrics_provider:
          $ref: '#/components/schemas/patchPagesPageIdMetricsProviders_metrics_provider'
      description: Update a metric provider
    putPagesPageIdMetricsProviders:
      type: object
      properties:
        metrics_provider:
          $ref: '#/components/schemas/patchPagesPageIdMetricsProviders_metrics_provider'
      description: Update a metric provider
    postPagesPageIdMetricsProvidersMetricsProviderIdMetrics:
      type: object
      properties:
        metric:
          $ref: '#/components/schemas/postPagesPageIdMetricsProvidersMetricsProviderIdMetrics_metric'
      description: Create a metric for a metric provider
    StatusEmbedConfig:
      type: object
      properties:
        page_id:
          type: string
          description: Page identifier
        position:
          type: string
          description: Corner where status embed iframe will appear on page
        incident_background_color:
          type: string
          description: Color of status embed iframe background when displaying incident
        incident_text_color:
          type: string
          description: Color of status embed iframe text when displaying incident
        maintenance_background_color:
          type: string
          description: Color of status embed iframe background when displaying maintenance
        maintenance_text_color:
          type: string
          description: Color of status embed iframe text when displaying maintenance
      description: Update status embed config settings
      example:
        page_id: page_id
        incident_background_color: incident_background_color
        maintenance_background_color: maintenance_background_color
        position: position
        incident_text_color: incident_text_color
        maintenance_text_color: maintenance_text_color
    patchPagesPageIdStatusEmbedConfig:
      type: object
      properties:
        status_embed_config:
          $ref: '#/components/schemas/patchPagesPageIdStatusEmbedConfig_status_embed_config'
      description: Update status embed config settings
    putPagesPageIdStatusEmbedConfig:
      type: object
      properties:
        status_embed_config:
          $ref: '#/components/schemas/patchPagesPageIdStatusEmbedConfig_status_embed_config'
      description: Update status embed config settings
    User:
      type: object
      properties:
        id:
          type: string
          description: User identifier
        organization_id:
          type: string
          description: Organization identifier
        email:
          type: string
          description: Email address for the team member
        first_name:
          type: string
        last_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      description: Get a list of users
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        organization_id: organization_id
        last_name: last_name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        first_name: first_name
        email: email
    postOrganizationsOrganizationIdUsers:
      required:
      - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/postOrganizationsOrganizationIdUsers_user'
      description: Create a user
    body:
      type: object
      properties:
        component_ids:
          type: array
          description: List of components codes to remove.  If omitted, all components will be removed.
          items:
            type: string
    body_1:
      required:
      - page_access_user_ids
      type: object
      properties:
        page_access_user_ids:
          type: array
          description: List of page access users to add to component
          items:
            type: string
    patchPages_page:
      properties:
        name:
          type: string
          description: Name of your page to be displayed
        domain:
          type: string
          description: CNAME alias for your status page
        subdomain:
          type: string
          description: Subdomain at which to access your status page
        url:
          type: string
          description: Website of your page.  Clicking on your statuspage image will link here.
        branding:
          type: string
          description: The main template your statuspage will use
          enum:
          - basic
          - premium
        css_body_background_color:
          type: string
          description: CSS Color
        css_font_color:
          type: string
          description: CSS Color
        css_light_font_color:
          type: string
          description: CSS Color
        css_greens:
          type: string
          description: CSS Color
        css_yellows:
          type: string
          description: CSS Color
        css_oranges:
          type: string
          description: CSS Color
        css_reds:
          type: string
          description: CSS Color
        css_blues:
          type: string
          description: CSS Color
        css_border_color:
          type: string
          description: CSS Color
        css_graph_color:
          type: string
          description: CSS Color
        css_link_color:
          type: string
          description: CSS Color
        css_no_data:
          type: string
          description: CSS Color
        hidden_from_search:
          type: boolean
          description: Should your page hide itself from search engines
        viewers_must_be_team_members:
          type: boolean
        allow_page_subscribers:
          type: boolean
          description: Can your users subscribe to all notifications on the page
        allow_incident_subscribers:
          type: boolean
          description: Can your users subscribe to notifications for a single incident
        allow_email_subscribers:
          type: boolean
          description: Can your users choose to receive notifications via email
        allow_sms_subscribers:
          type: boolean
          description: Can your users choose to receive notifications via SMS
        allow_rss_atom_feeds:
          type: boolean
          description: Can your users choose to access incident feeds via RSS/Atom
        allow_webhook_subscribers:
          type: boolean
          description: Can your users choose to receive notifications via Webhooks
        notifications_from_email:
          type: string
          description: Allows you to customize the email address your page notifications come from
        time_zone:
          type: string
          description: Timezone configured for your page
        notifications_email_footer:
          type: string
          description: Allows you to customize the footer appearing on your notification emails.  Accepts Markdown for formatting
    postPagesPageIdPageAccessUsers_page_access_user:
      properties:
        external_login:
          type: string
          description: IDP login user id. Key is typically "uid".
        email:
          type: string
        page_access_group_ids:
          type: array
          items:
            type: string
        subscribe_to_components:
          type: boolean
    postPagesPageIdPageAccessGroups_page_access_group:
      properties:
        name:
          type: string
          description: Name for this Group.
        external_identifier:
          type: string
          description: Associates group with external group.
        component_ids:
          type: array
          items:
            type: string
        metric_ids:
          type: array
          items:
            type: string
        page_access_user_ids:
          type: array
          items:
            type: string
    postPagesPageIdSubscribers_subscriber:
      properties:
        email:
          type: string
          description: The email address for creating Email and Webhook subscribers.
        endpoint:
          type: string
          description: The endpoint URI for creating Webhook subscribers.
        phone_country:
          type: string
          description: The two-character country where the phone number is located to use for the new SMS subscriber.
        phone_number:
          type: string
          description: The phone number (as you would dial from the phone_country) to use for the new SMS subscriber.
        skip_confirmation_notification:
          type: boolean
          description: If skip_confirmation_notification is true, the subscriber does not receive any notifications when their subscription changes.  Email subscribers will be automatically opted in. This option is only available for paid pages. This option has no effect for trial customers.
        page_access_user:
          type: string
          description: The code of the page access user to which the subscriber belongs.
        component_ids:
          type: array
          description: A list of component ids for which the subscriber should recieve updates for. Components must be an array with at least one element if it is passed at all. Each component must belong to the page indicated in the path.
          items:
            type: string
    postPagesPageIdIncidentTemplates_template:
      properties:
        name:
          type: string
          description: Name of the template, as shown in the list on the "Templates" tab of the "Incidents" page
        title:
          type: string
          description: Title to be applied to the incident or maintenance when selecting this template
        body:
          type: string
          description: The initial message, created as the first incident or maintenance update.
        group_id:
          type: string
          description: Identifier of Template Group this template belongs to
        update_status:
          type: string
          description: The status the incident or maintenance should transition to when selecting this template
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
        should_tweet:
          type: boolean
          description: Whether the "tweet update" checkbox should be selected when selecting this template
        should_send_notifications:
          type: boolean
          description: Whether the "deliver notifications" checkbox should be selected when selecting this template
        component_ids:
          type: array
          description: List of component_ids affected by this incident
          items:
            type: string
            default: 4mphs8wm6f98
    postPagesPageIdIncidents_incident_components:
      properties:
        component_id:
          type: string
          description: Map of status changes to apply to affected components
          enum:
          - operational
          - under_maintenance
          - degraded_performance
          - partial_outage
          - major_outage
          - ""
      description: Map of status changes to apply to affected components
    postPagesPageIdIncidents_incident:
      properties:
        name:
          type: string
          description: Incident Name
        status:
          type: string
          description: The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
        impact_override:
          type: string
          description: value to override calculated impact value
          enum:
          - critical
          - none
          - maintenance
          - major
          - minor
        scheduled_for:
          type: string
          description: The timestamp the incident is scheduled for.
          format: date-time
        scheduled_until:
          type: string
          description: The timestamp the incident is scheduled until.
          format: date-time
        scheduled_remind_prior:
          type: boolean
          description: Controls whether to remind subscribers prior to scheduled incidents.
        scheduled_auto_in_progress:
          type: boolean
          description: Controls whether the incident is scheduled to automatically change to in progress.
        scheduled_auto_completed:
          type: boolean
          description: Controls whether the incident is scheduled to automatically change to complete.
        metadata:
          type: object
          description: Attach a json object to the incident. All top-level values in the object must also be objects.
        deliver_notifications:
          type: boolean
          description: Deliver notifications to subscribers if this is true. If this is false, create an incident without notifying customers.
          default: true
        auto_transition_deliver_notifications_at_end:
          type: boolean
          description: Controls whether send notification when scheduled maintenances auto transition to completed.
        auto_transition_deliver_notifications_at_start:
          type: boolean
          description: Controls whether send notification when scheduled maintenances auto transition to started.
        auto_transition_to_maintenance_state:
          type: boolean
          description: Controls whether change components status to under_maintenance once scheduled maintenance is in progress.
        auto_transition_to_operational_state:
          type: boolean
          description: Controls whether change components status to operational once scheduled maintenance completes.
        auto_tweet_at_beginning:
          type: boolean
          description: Controls whether tweet automatically when scheduled maintenance starts.
        auto_tweet_on_completion:
          type: boolean
          description: Controls whether tweet automatically when scheduled maintenance completes.
        auto_tweet_on_creation:
          type: boolean
          description: Controls whether tweet automatically when scheduled maintenance is created.
        auto_tweet_one_hour_before:
          type: boolean
          description: Controls whether tweet automatically one hour before scheduled maintenance starts.
        backfill_date:
          type: string
          description: TimeStamp when incident was backfilled.
        backfilled:
          type: boolean
          description: Controls whether incident is backfilled. If true, components cannot be specified.
        body:
          type: string
          description: The initial message, created as the first incident update.
        components:
          $ref: '#/components/schemas/postPagesPageIdIncidents_incident_components'
        component_ids:
          type: array
          description: List of component_ids affected by this incident
          items:
            type: string
            default: 3j5yrf9ntzq3
        scheduled_auto_transition:
          type: boolean
          description: Same as :scheduled_auto_transition_in_progress. Controls whether the incident is scheduled to automatically change to in progress.
    patchPagesPageIdIncidents_incident:
      properties:
        name:
          type: string
          description: Incident Name
        status:
          type: string
          description: The incident status. For realtime incidents, valid values are investigating, identified, monitoring, and resolved. For scheduled incidents, valid values are scheduled, in_progress, verifying, and completed.
          enum:
          - investigating
          - identified
          - monitoring
          - resolved
          - scheduled
          - in_progress
          - verifying
          - completed
        impact_override:
          type: string
          description: value to override calculated impact value
          enum:
          - critical
          - none
          - maintenance
          - major
          - minor
        scheduled_for:
          type: string
          description: The timestamp the incident is scheduled for.
          format: date-time
        scheduled_until:
          type: string
          description: The timestamp the incident is scheduled until.
          format: date-time
        scheduled_remind_prior:
          type: boolean
          description: Controls whether to remind subscribers prior to scheduled incidents.
        scheduled_auto_in_progress:
          type: boolean
          description: Controls whether the incident is scheduled to automatically change to in progress.
        scheduled_auto_completed:
          type: boolean
          description: Controls whether the incident is scheduled to automatically change to complete.
        metadata:
          type: object
          description: Attach a json object to the incident. All top-level values in the object must also be objects.
        deliver_notifications:
          type: boolean
          description: Deliver notifications to subscribers if this is true. If this is false, create an incident without notifying customers.
          default: true
        auto_transition_deliver_notifications_at_end:
          type: boolean
          description: Controls whether send notification when scheduled maintenances auto transition to completed.
        auto_transition_deliver_notifications_at_start:
          type: boolean
          description: Controls whether send notification when scheduled maintenances auto transition to started.
        auto_transition_to_maintenance_state:
          type: boolean
          description: Controls whether change components status to under_maintenance once scheduled maintenance is in progress.
        auto_transition_to_operational_state:
          type: boolean
          description: Controls whether change components status to operational once scheduled maintenance completes.
        auto_tweet_at_beginning:
          type: boolean
          description: Controls whether tweet automatically when scheduled maintenance starts.
        auto_tweet_on_completion:
          type: boolean
          description: Controls whether tweet automatically when scheduled maintenance completes.
        auto_tweet_on_creation:
          type: boolean
          description: Controls whether tweet automatically when scheduled maintenance is created.
        auto_tweet_one_hour_before:
          type: boolean
          description: Controls whether tweet automatically one hour before scheduled maintenance starts.
        backfill_date:
          type: string
          description: TimeStamp when incident was backfilled.
        backfilled:
          type: boolean
          description: Controls whether incident is backfilled. If true, components cannot be specified.
        body:
          type: string
          description: The initial message, created as the first incident update.
        components:
          $ref: '#/components/schemas/postPagesPageIdIncidents_incident_components'
        component_ids:
          type: array
          description: List of component_ids affected by this incident
          items:
            type: string
            default: ny8m3m1c279r
        scheduled_auto_transition:
          type: boolean
          description: Same as :scheduled_auto_transition_in_progress. Controls whether the incident is scheduled to automatically change to in progress.
    patchPagesPageIdIncidentsIncidentIdIncidentUpdates_incident_update:
      properties:
        wants_twitter_update:
          type: boolean
          description: Controls whether to create twitter update.
        body:
          type: string
          description: Incident update body.
        display_at:
          type: string
          description: Timestamp when incident update is happened.
          format: date-time
        deliver_notifications:
          type: boolean
          description: Controls whether to delivery notifications.
    postPagesPageIdIncidentsIncidentIdSubscribers_subscriber:
      properties:
        email:
          type: string
          description: The email address for creating Email subscribers.
        phone_country:
          type: string
          description: The two-character country where the phone number is located to use for the new SMS subscriber.
        phone_number:
          type: string
          description: The phone number (as you would dial from the phone_country) to use for the new SMS subscriber.
        skip_confirmation_notification:
          type: boolean
          description: If skip_confirmation_notification is true, the subscriber does not receive any notifications when their subscription changes. Email subscribers will be automatically opted in. This option is only available for paid pages. This option has no effect for trial customers.
    putPagesPageIdIncidentsIncidentIdPostmortem_postmortem:
      properties:
        body_draft:
          type: string
          description: Body of Postmortem to create.
    putPagesPageIdIncidentsIncidentIdPostmortemPublish_postmortem:
      properties:
        notify_twitter:
          type: boolean
          description: Whether to notify Twitter followers
        notify_subscribers:
          type: boolean
          description: Whether to notify e-mail subscribers
        custom_tweet:
          type: string
          description: Custom postmortem tweet to publish
    postPagesPageIdComponents_component:
      properties:
        description:
          type: string
          description: More detailed description for component
        status:
          type: string
          description: Status of component
          enum:
          - operational
          - under_maintenance
          - degraded_performance
          - partial_outage
          - major_outage
          - ""
        name:
          type: string
          description: Display name for component
        only_show_if_degraded:
          type: boolean
          description: Requires a special feature flag to be enabled
        group_id:
          type: string
          description: Component Group identifier
        showcase:
          type: boolean
          description: Should this component be showcased
        start_date:
          type: string
          description: The date this component started being used
          format: date
    ComponentUptime_related_events:
      properties:
        id:
          type: string
          description: Incident identifier
      description: Related incidents
      example:
        id: id
    postPagesPageIdComponentGroups_component_group:
      properties:
        components:
          type: array
          items:
            type: string
        name:
          type: string
    ComponentGroupUptime_related_events:
      properties:
        component_id:
          type: string
          description: Component identifier
        incidents:
          $ref: '#/components/schemas/ComponentUptime_related_events'
      description: Related incidents by component
      example:
        component_id: component_id
        incidents:
          id: id
    MetricAddResponse_metric_id:
      properties:
        timestamp:
          type: integer
          format: int32
        value:
          type: number
          format: float
      example:
        value: 6.0274563
        timestamp: 0
    patchPagesPageIdMetrics_metric:
      properties:
        name:
          type: string
          description: Name of metric
        metric_identifier:
          type: string
          description: Metric Display identifier used to look up the metric data from the provider
    postPagesPageIdMetricsMetricIdData_data:
      properties:
        timestamp:
          type: integer
          description: Time to store the metric against
          format: int32
        value:
          type: number
          format: float
    postPagesPageIdMetricsProviders_metrics_provider:
      properties:
        email:
          type: string
          description: Required by the Librato metrics provider.
        password:
          type: string
        api_key:
          type: string
          description: Required by the Datadog and NewRelic type metrics providers.
        api_token:
          type: string
          description: Required by the Librato, Datadog and Pingdom type metrics providers.
        application_key:
          type: string
          description: Required by the Pingdom-type metrics provider.
        type:
          type: string
          description: One of "Pingdom", "NewRelic", "Librato", "Datadog", or "Self"
        metric_base_uri:
          type: string
          description: Required by the Datadog and NewRelic type metrics providers.
    patchPagesPageIdMetricsProviders_metrics_provider:
      properties:
        type:
          type: string
        metric_base_uri:
          type: string
    postPagesPageIdMetricsProvidersMetricsProviderIdMetrics_metric:
      properties:
        name:
          type: string
          description: Name of metric
        metric_identifier:
          type: string
          description: The identifier used to look up the metric data from the provider
        transform:
          type: string
          description: 'The transform to apply to metric before pulling into Statuspage.
            One of: "average", "count", "max", "min", or "sum"'
        suffix:
          type: string
          description: Suffix to describe the units on the graph
        y_axis_min:
          type: integer
          description: The lower bound of the y axis
          format: int32
        y_axis_max:
          type: integer
          description: The upper bound of the y axis
          format: int32
        y_axis_hidden:
          type: boolean
          description: Should the values on the y axis be hidden on render
        display:
          type: boolean
          description: Should the metric be displayed
        decimal_places:
          type: integer
          description: How many decimal places to render on the graph
          format: int32
        tooltip_description:
          type: string
    patchPagesPageIdStatusEmbedConfig_status_embed_config:
      properties:
        position:
          type: string
          description: Corner where status embed iframe will appear on page
        incident_background_color:
          type: string
          description: Color of status embed iframe background when displaying incident
        incident_text_color:
          type: string
          description: Color of status embed iframe text when displaying incident
        maintenance_background_color:
          type: string
          description: Color of status embed iframe background when displaying maintenance
        maintenance_text_color:
          type: string
          description: Color of status embed iframe text when displaying maintenance
    postOrganizationsOrganizationIdUsers_user:
      properties:
        email:
          type: string
          description: Email address for the team member
        password:
          type: string
          description: Password the team member uses to access the site
        first_name:
          type: string
        last_name:
          type: string
  requestBodies:
    patchPagesPageIdPageAccessUsersPageAccessUserIdComponents:
      content:
        application/x-www-form-urlencoded:
          schema:
            required:
            - component_ids
            type: object
            properties:
              component_ids:
                type: array
                description: List of component codes to allow access to
                items:
                  type: string
  securitySchemes:
    api_key:
      type: apiKey
      description: |
        #### Obtaining your API Key

        Authentication is done via an API token provided in the Statuspage management interface.

          1. Log in to your account at https://manage.statuspage.io/login.
          2. Click on your avatar in the bottom left of your screen to access the user menu.
          3. Click **API info**.

        ### Passing your API key in an authorization header

        The following example authenticates you with the Statuspage API.  Along with the Page ID
        listed on the API page, we can fetch your page profile.

            curl -H "Authorization: OAuth 89a229ce1a8dbcf9ff30430fbe35eb4c0426574bca932061892cefd2138aa4b1" \
              https://api.statuspage.io/v1/pages/gytm4qzbx9t6.json

        ### Passing your API key in a query param

            curl "https://api.statuspage.io/v1/pages/gytm4qzbx9t6.json?api_key=89a229ce1a8dbcf9ff30430fbe35eb4c0426574bca932061892cefd2138aa4b1"
      name: Authorization
      in: header
